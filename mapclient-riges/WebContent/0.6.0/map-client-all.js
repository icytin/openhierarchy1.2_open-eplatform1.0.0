Ext.define("MapClient.Gui",{activeAction:null,constructor:function(a){this.config=a.config;this.gui=a.gui;this.map=a.map;void 0===this.gui&&(this.gui={map:!1,toolbar:{},zoomTools:{},layers:{},searchFastighet:{},figurConfig:{},searchCoordinate:!1});this.mapPanel=Ext.create("MapClient.view.Map",{map:this.map,extent:this.config.extent});this.createPanels();this.createToolbar();a=[];a.push(this.mapPanel);this.zoomTools&&a.push(this.zoomTools);this.leftPanel&&a.push(this.leftPanel);this.rightPanel&&a.push(this.rightPanel);
this.baseLayers&&a.push(this.baseLayers);if(this.gui.map&&this.gui.map.renderTo){var b=Ext.get(this.gui.map.renderTo);this.container=Ext.create("Ext.container.Container",Ext.apply({layout:"absolute",border:!1,width:b.getWidth(),height:b.getHeight(),items:a},this.gui.map))}else this.container=Ext.create("Ext.container.Viewport",{layout:"absolute",items:a});this.config.attribution&&(a=this.mapPanel.getEl(),Ext.DomHelper.append(a,'<span class="unselectable attribution">'+this.config.attribution+"</span>"))},
destroy:function(){this.mapPanel&&this.mapPanel.destroy();this.zoomTools&&this.zoomTools.destroy();this.mapLayers&&this.mapLayers.destroy();this.searchFastighet&&this.searchFastighet.destroy();this.searchCoordinate&&this.searchCoordinate.destroy();this.toolbar&&this.toolbar.destroy();this.leftPanel&&this.leftPanel.destroy();this.rightPanel&&this.rightPanel.destroy();this.baseLayers&&this.baseLayers.destroy();this.objectConfig&&this.objectConfig.destroy();this.objectConfigWindow&&this.objectConfigWindow.destroy();
this.container&&this.container.destroy()},onToggle:function(a,b){var c=a.baseAction;this.objectConfig&&(b&&(this.mapPanel.unselectAll(),this.objectConfig.hide(),this.activeAction=c),c.toggle(b))},createToolbar:function(){var a=this.config.basePath;this.config.tools||(this.config.tools=[]);var b=this.config.tools.map(function(b){var c=void 0;b===this.config.tools[this.config.tools.length-1]&&(c="oep-tools-last");c={map:this.map,mapPanel:this.mapPanel,cls:c};if(b.constructor===Object){Ext.apply(c,b);
b=c.type;delete c.type}if(b=="ZoomSelector")return Ext.create("MapClient.form.ZoomSelector",{map:this.map});if(b=="DrawObject")c.objectConfigView=this.objectConfig;else if(b=="Identify")c.basePath=a;b=Ext.create("MapClient.action."+b,c);if(c.activate&&b.control)this.controlToActivate=b.control;b=Ext.create("Ext.button.Button",b);b.on("toggle",this.onToggle,this);return b},this),c=6;b.forEach(function(a){if(a){c=a.constructor==String?c+1:a.width?c+a.width:c+24;c=c+8}});c+=6;this.gui.toolbar&&!this.gui.toolbar.renderTo?
this.leftPanel=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",y:20,x:80,items:b},this.gui.toolbar)):this.gui.toolbar&&this.gui.toolbar.renderTo&&(this.toolbar=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",width:this.gui.toolbar.width||c,items:b},this.gui.toolbar)))},createPanels:function(a){this.mapLayers=Ext.create("MapClient.view.Layers",Ext.apply({mapPanel:this.mapPanel},this.gui.layers));this.searchFastighet=Ext.create("MapClient.view.SearchFastighet",Ext.apply({mapPanel:this.mapPanel,
basePath:this.config.basePath},this.gui.searchFastighet));this.gui.layers&&!this.gui.layers.renderTo&&(a=[this.mapLayers],this.gui.searchFastighet&&!this.gui.searchFastighet.renderTo&&a.push(this.searchFastighet),this.rightPanel=Ext.create("Ext.panel.Panel",{y:20,layout:{type:"vbox",align:"stretch",pack:"start"},width:300,border:!1,style:{right:"20px"},bodyStyle:{background:"transparent"},items:a}));!this.map.allOverlays&&this.gui.baseLayers&&(this.baseLayers=Ext.create("MapClient.view.BaseLayers",
{mapPanel:this.mapPanel,y:20,style:{right:"45%"},width:155}));this.gui.zoomTools&&!this.gui.zoomTools.renderTo&&(this.zoomTools=Ext.create("MapClient.view.ZoomTools",Ext.apply({mapPanel:this.mapPanel,x:20,y:20,width:36},this.gui.zoomTools)));this.gui.searchCoordinate&&this.gui.searchCoordinate.renderTo&&(this.searchCoordinate=Ext.create("MapClient.view.SearchCoordinate",Ext.apply({mapPanel:this.mapPanel},this.gui.searchCoordinate)));this.gui.objectConfig&&this.gui.objectConfig.renderTo?this.objectConfig=
Ext.create("MapClient.view.ObjectConfig",Ext.apply({mapPanel:this.mapPanel,gui:this},this.gui.objectConfig)):this.gui.objectConfig&&(this.objectConfig=Ext.create("MapClient.view.ObjectConfig",Ext.apply({mapPanel:this.mapPanel,gui:this},this.gui.objectConfig)),this.objectConfigWindow=Ext.create("Ext.window.Window",Ext.apply({title:"Object configuration",width:480,height:260,layout:"fit",closable:!1,items:this.objectConfig},this.gui.objectConfig)),this.objectConfigWindow.show())}});
Ext.define("MapClient.form.ZoomSelector",{extend:Ext.form.ComboBox,emptyText:"Zoom Level",listConfig:{getInnerTpl:function(){return"1: {scale:round(0)}"}},width:120,editable:!1,triggerAction:"all",queryMode:"local",initComponent:function(){this.store=Ext.create("GeoExt.data.ScaleStore",{map:this.map});this.listeners={select:{fn:function(a,b){this.map.zoomTo(b[0].get("level"))},scope:this}};this.map.events.register("zoomend",this,function(){var a=this.store.queryBy(function(a){return this.map.getZoom()==
a.data.level});0<a.length?(a=a.items[0],this.setValue("1 : "+parseInt(a.data.scale))):zoomSelector.rendered&&this.clearValue()});this.callParent(arguments)}});
Ext.define("MapClient",{version:"0.6.0-SNAPSHOT",basePath:"/search/lm/",map:null,drawLayer:null,launch:function(){Ext.tip.QuickTipManager.init();OpenLayers.DOTS_PER_INCH=101.6},destroy:function(){this.gui&&this.gui.destroy()},configure:function(a,b){b=Ext.apply({},b);this.initialConfig=Ext.clone(a);a.basePath=this.basePath;this.map=Ext.create("MapClient.config.Parser").parse(a);this.gui=Ext.create("MapClient.Gui",{config:a,gui:b.gui,map:this.map});this.drawLayer=this.gui.mapPanel.drawLayer;this.gui.controlToActivate&&
this.gui.controlToActivate.activate()},addGeoJSON:function(a){this.drawLayer.addFeatures([(new OpenLayers.Format.GeoJSON).read(a,"Feature")])},setSketchStyleMap:function(a){this.map.controls.forEach(function(b){b instanceof OpenLayers.Control.DrawFeature&&(b.handler.layerOptions.styleMap=a,b.handler.layer&&(b.handler.layer.styleMap=a))})}});
Ext.define("MapClient.ObjectFactory",{toPoint:function(a){return new OpenLayers.Geometry.Point(a[0],a[1])},createR:function(a){var b=a.x,c=a.y,d=a.l,a=a.w,b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-d],[b+a,c-d],[b+a,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},createL:function(a){var b=a.x,c=a.y,d=a.l,e=a.w,f=a.m1,a=a.m2,b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-e],[b+f,c-e],[b+f,c-a],[b+d,c-a],[b+d,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},
createD:function(a){var b=a.x,c=a.y,d=a.l,e=a.w,a=(d-a.m1)/2,b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-e+a],[b+a,c-e],[b+d-a,c-e],[b+d,c-e+a],[b+d,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},createO:function(a){var b=a.x,c=a.y,a=a.m1/2*Math.sqrt(4+2*Math.SQRT2),b=new OpenLayers.Geometry.Point(b+a,c-a);return OpenLayers.Geometry.Polygon.createRegularPolygon(b,a,8)},figurHooks:function(a){var b=a.geometry.move;a.geometry.move=function(c,e){a.attributes.config.x+=c;a.attributes.config.y+=
e;b.apply(a.geometry,arguments)};var c=a.geometry.rotate;a.geometry.rotate=function(b,e){a.attributes.config.angle+=b;c.apply(a.geometry,arguments)}},create:function(a,b,c){var d;d="R"==a.type?this.createR(a):"L"==a.type?this.createL(a):"D"==a.type?this.createD(a):this.createO(a);var e=d.getCentroid(),e=new OpenLayers.Geometry.Point(e.x,e.y);d.rotate(a.angle,e);b=new OpenLayers.Feature.Vector(d,b,c);this.figurHooks(b);b.attributes.config=a;return b}});
Ext.define("MapClient.Search",{constructor:function(){initConfig()},doSearch:function(){}});Ext.define("MapClient.action.Action",{extend:GeoExt.Action,constructor:function(a){var b=a.mapPanel.map;if(a.minScale||a.maxScale)a.minScale||(a.minScale=0),a.maxScale||(a.maxScale=99999999999999),b.events.register("zoomend",this,function(){b.getScale()>=a.maxScale||b.getScale()<=a.minScale?this.disable():this.enable()});this.callParent(arguments)},toggle:function(){}});
Ext.define("MapClient.action.DeleteGeometry",{extend:MapClient.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;a.handler=function(){b.destroyFeatures(b.selectedFeatures)};a.iconCls=a.iconCls||"action-deletegeometry";a.tooltip=a.tooltip||"Delete geometry";this.callParent(arguments)}});
Ext.define("MapClient.action.DrawGeometry",{extend:MapClient.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;a.attributes=a.attributes||{};a.geometry=a.geometry||"Polygon";var c=OpenLayers.Class(OpenLayers.Control.DrawFeature,{drawFeature:function(b){b=new OpenLayers.Feature.Vector(b,a.attributes);!1!==this.layer.events.triggerEvent("sketchcomplete",{feature:b})&&(b.state=OpenLayers.State.INSERT,this.layer.addFeatures([b]),this.featureAdded(b),this.events.triggerEvent("featureadded",
{feature:b}))}});a.control=new c(b,OpenLayers.Handler[a.geometry]);a.iconCls=a.iconCls||"action-drawgeometry";a.tooltip=a.tooltip||"Draw geometry";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("MapClient.view.ObjectConfig",{extend:Ext.form.Panel,statics:{config:{type:"R",w:100,l:100,m1:20,m2:20,angle:0}},fieldDefaults:{labelWidth:60},autoHeight:!0,width:400,border:!1,selectedFeature:void 0,layer:void 0,factory:void 0,hidden:!0,defaults:{border:!1},initComponent:function(){this.layer=this.mapPanel.drawLayer;this.factory=Ext.create("MapClient.ObjectFactory");var a=[];a.push({xtype:"radiogroup",vertical:!0,fieldLabel:"Type",itemId:"type",hidden:!0,items:[{boxLabel:'<img src="resources/css/images/figur-R.png">',
name:"rb",inputValue:"R",checked:!0},{boxLabel:'<img src="resources/css/images/figur-L.png">',name:"rb",enabled:!1,inputValue:"L"},{boxLabel:'<img src="resources/css/images/figur-D.png">',name:"rb",enabled:!1,inputValue:"D"},{boxLabel:'<img src="resources/css/images/figur-O.png">',name:"rb",enabled:!1,inputValue:"O"}],listeners:{change:function(a,c){this.config.type=c.rb;this.updateHelpImage(this.config.type);this.setFormItemVisibility(this.config.type);this.createObject()},scope:this}});a=a.concat([{xtype:"numberfield",
fieldLabel:"Width",itemId:"w",minValue:0,listeners:{change:function(a,c){this.config.w=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:"Length",itemId:"l",minValue:0,listeners:{change:function(a,c){this.config.l=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:"M1",itemId:"m1",minValue:0,listeners:{change:function(a,c){this.config.m1=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:"M2",itemId:"m2",minValue:0,listeners:{change:function(a,c){this.config.m2=
c;this.createObject()},scope:this}},{xtype:"numberfield",itemId:"angle",fieldLabel:"Angle",value:0,listeners:{change:function(a,c){this.config.angle=c;this.createObject()},scope:this}}]);this.attributeFields=Ext.create("Ext.container.Container",{title:"Attributes"});a.push(this.attributeFields);this.items=[{layout:"column",defaults:{border:!1},padding:5,items:[{width:160,layout:"form",items:a},{columnWidth:1,padding:5,items:{itemId:"objectimage",border:!1,height:152}}]}];this.layer.events.register("featuremodified",
this,this.onFeaturemodified);this.layer.events.register("beforefeatureselected",this,this.onBeforefeatureselected);this.layer.events.register("featureunselected",this,this.onFeatureunselected);this.callParent(arguments)},setConfig:function(a){void 0===a?(this.config=Ext.clone(MapClient.view.ObjectConfig.config),this.down("#type").show()):a.type?(this.config=Ext.clone(a),Ext.applyIf(this.config,MapClient.view.ObjectConfig.config),this.down("#type").hide()):(this.config=Ext.clone(a),Ext.applyIf(this.config,
MapClient.view.ObjectConfig.config),this.down("#type").show());this.setFormValues();this.show();return this.config},setFormValues:function(){this.config?(this.down("#type").setValue({rb:this.config.type}),this.updateHelpImage(this.config.type),this.down("#w").setRawValue(this.config.w),this.down("#l").setRawValue(this.config.l),this.down("#m1").setRawValue(this.config.m1),this.down("#m2").setRawValue(this.config.m2),this.down("#angle").setRawValue(this.config.angle),this.setFormItemVisibility(this.config.type),
this.down("#angle").show()):(this.down("#type").hide(),this.down("#w").hide(),this.down("#l").hide(),this.down("#m1").hide(),this.down("#m2").hide(),this.down("#angle").hide(),this.down("#objectimage").hide());this.attributeFields.removeAll();this.selectedFeature&&Object.keys(this.selectedFeature.attributes).forEach(function(a){this.createAttributeField(this.selectedFeature,a)},this);this.doLayout()},createAttributeField:function(a,b){"config"!=b&&this.attributeFields.add({xtype:"textfield",fieldLabel:b,
value:a.attributes[b],listeners:{change:function(a,d){this.selectedFeature.attributes[b]=d;this.layer.drawFeature(this.selectedFeature)},scope:this}})},setFormItemVisibility:function(a){"R"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").hide(),this.down("#m2").hide()):"L"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").show(),this.down("#m2").show()):"D"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").show(),this.down("#m2").hide()):"O"==a&&
(this.down("#w").hide(),this.down("#l").hide(),this.down("#m1").show(),this.down("#m2").hide())},onFeaturemodified:function(a){(config=a.feature.attributes.config)&&this.down("#angle").setRawValue(config.angle)},onBeforefeatureselected:function(a){this.selectedFeature=a=a.feature;this.config=a.attributes.config;if((a=this.gui.activeAction)&&a.control instanceof OpenLayers.Control.ModifyFeature)a.control.mode=this.config&&a.control.mode&OpenLayers.Control.ModifyFeature.RESHAPE?a.control.mode^OpenLayers.Control.ModifyFeature.RESHAPE:
a.control._mode,a.control.resetVertices();this.show();this.setFormValues()},onFeatureunselected:function(){0==this.layer.selectedFeatures.length&&this.hide();this.selectedFeature=void 0},createObject:function(a,b,c){this.selectedFeature&&this.selectedFeature.attributes.config&&(a=this.factory.create(this.config,c).geometry,this.selectedFeature.geometry.removeComponent(this.selectedFeature.geometry.components[0]),this.selectedFeature.geometry.addComponent(a.components[0]),this.selectedFeature.modified=
!0,this.selectedFeature.geometry.calculateBounds(),this.mapPanel.modifyFeature&&this.mapPanel.modifyFeature.resetVertices(),this.layer.drawFeature(this.selectedFeature))},updateHelpImage:function(a){a="figur-"+a+"-help.png";this.down("#objectimage").show();this.down("#objectimage").update('<img src="css/images/'+a+'"></img>')}});
Ext.define("MapClient.action.DrawObject",{extend:MapClient.action.Action,constructor:function(a){this.mapPanel=a.mapPanel;this.layer=this.mapPanel.drawLayer;this.style=a.style;this.attributes=a.attributes;this.objectConfig=a.objectConfig;this.objectConfigView=a.objectConfigView;this.factory=Ext.create("MapClient.ObjectFactory");this.attributes=this.attributes||{};var b=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=
new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:Ext.bind(this.onClick,this)});a.control=new b({type:OpenLayers.Control.TYPE_TOGGLE});a.iconCls=a.iconCls||"action-drawobject";a.tooltip=a.tooltip||"Draw predefined object";a.toggleGroup="extraTools";this.callParent(arguments)},onClick:function(a){var a=this.mapPanel.map.getLonLatFromPixel(a.xy),b=this.objectConfigView?this.objectConfigView.config:MapClient.view.ObjectConfig.config,b=Ext.clone(b);b.x=a.lon;b.y=a.lat;
a=this.factory.create(b,this.attributes,this.style);this.mapPanel.unselectAll();this.layer.addFeatures([a]);this.mapPanel.selectControl.select(a)},toggle:function(a){a&&this.objectConfigView.setConfig(this.objectConfig)}});Ext.define("MapClient.action.FullExtent",{extend:MapClient.action.Action,constructor:function(a){a.control=new OpenLayers.Control.ZoomToMaxExtent;a.iconCls=a.iconCls||"action-fullextent";a.tooltip=a.tooltip||"Zoom to full extent";this.callParent(arguments)}});
Ext.define("MapClient.view.IdentifyResults",{extend:Ext.panel.Panel,autoScroll:!0,layout:{type:"vbox",pack:"start",align:"stretch"},initComponent:function(){var a=Ext.create("Ext.data.TreeStore",{root:{expanded:!0}});a.getRootNode().appendChild({text:"Fastigheter",leaf:!1,expanded:!0}).appendChild({text:this.result[Object.keys(this.result)[0]],leaf:!0});this.items=[{xtype:"treepanel",flex:1,rootVisible:!1,store:a},{xtype:"propertygrid",flex:0,title:"Egenskaper",collapsible:!0,collapsed:!0,source:this.result}];
this.callParent(arguments)}});
Ext.define("MapClient.action.Identify",{extend:MapClient.action.Action,constructor:function(a){var b=a.mapPanel,c=b.searchLayer,d=a.map,e=a.basePath,f=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(a){b.setLoading(!0);c.destroyFeatures();var f=d.getLonLatFromPixel(a.xy),a=f.lon,f=f.lat,h=new OpenLayers.Geometry.Point(a,
f),i=new OpenLayers.Feature.Vector(h);c.addFeatures([i]);Ext.Ajax.request({url:e+"registerenheter?x="+a+"&y="+f,success:function(a){a=Ext.decode(a.responseText);a=Ext.create("MapClient.view.IdentifyResults",{mapPanel:b,result:a});Ext.create("GeoExt.window.Popup",{title:"S\u00f6kresultat",location:i,map:b,maximizable:!1,minimizable:!1,resizable:!0,width:300,height:200,layout:"fit",items:a,collapsible:!1}).show()},failure:function(){Ext.Msg.alert("Fel","Ingen tr\u00e4ff.")},callback:function(){b.setLoading(!1)}})}});
a.control=new f({type:OpenLayers.Control.TYPE_TOGGLE});a.iconCls=a.iconCls||"action-identify";a.tooltip=a.tooltip||"Identify";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("MapClient.action.MeasureArea",{extend:MapClient.action.Action,constructor:function(a){var b=new OpenLayers.Style;b.addRules([new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969db",strokeDashstyle:"dash"},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969db",strokeDashstyle:"dash",fillColor:"#deecff",fillOpacity:0.4}}})]);
b=new OpenLayers.StyleMap({"default":b});a.control=new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,{persist:!0,handlerOptions:{layerOptions:{styleMap:b}}});var c="",d=1,e=!0;a.control.events.on({measure:function(a){var b=a.units,d=a.measure;c=1==a.order?c+("Totalt: "+d.toFixed(3)+" "+b+"<br>"):c+("Totalt: "+d.toFixed(3)+" "+b+"<sup>2</sup><br>");MapClient.action.MeasureLine.measureWindow.update(c);e=!0},measurepartial:function(a){MapClient.action.MeasureLine.createMeasureWindow();MapClient.action.MeasureLine.measureWindow.show();
var b=a.geometry,g=a.units,h=a.order,a=a.measure;e&&(c="",d=1,e=!1);g=b.components[b.components.length-2];b=b.components[b.components.length-3];void 0===g||void 0===b||(a=g.distanceTo(b),g="m",c=1==h?c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"<br>"):c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"<sup>2</sup><br>"),MapClient.action.MeasureLine.measureWindow.update(c),d+=1)}});a.iconCls=a.iconCls||"action-measurearea";a.tooltip=a.tooltip||"Measure area";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("MapClient.action.MeasureLine",{extend:MapClient.action.Action,statics:{measureWindow:null,createMeasureWindow:function(){this.measureWindow?this.measureWindow.update(""):this.measureWindow=Ext.create("Ext.window.Window",{title:"M\u00e4tresultat",maximizable:!1,minimizable:!1,resizable:!0,width:300,height:200,autoScroll:!0,layout:"fit",collapsible:!1,closeAction:"hide"})}},constructor:function(a){var b=new OpenLayers.Style;b.addRules([new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,
graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",fillColor:"white",fillOpacity:0.3}}})]);b=new OpenLayers.StyleMap({"default":b});a.control=new OpenLayers.Control.Measure(OpenLayers.Handler.Path,{persist:!0,handlerOptions:{layerOptions:{styleMap:b}}});var c="",d=1,e=!0;a.control.events.on({measure:function(a){var b=
a.units,d=a.measure;c=1==a.order?c+("Totalt: "+d.toFixed(3)+" "+b+"<br>"):c+("Totalt: "+d.toFixed(3)+" "+b+"<sup>2</sup><br>");MapClient.action.MeasureLine.measureWindow.update(c);e=!0},measurepartial:function(a){MapClient.action.MeasureLine.createMeasureWindow();MapClient.action.MeasureLine.measureWindow.show();var b=a.geometry,g=a.units,h=a.order,a=a.measure;e&&(c="",d=1,e=!1);g=b.components[b.components.length-2];b=b.components[b.components.length-3];void 0===g||void 0===b||(a=g.distanceTo(b),
g="m",c=1==h?c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"<br>"):c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"<sup>2</sup><br>"),MapClient.action.MeasureLine.measureWindow.update(c),d+=1)}});a.iconCls=a.iconCls||"action-measureline";a.tooltip=a.tooltip||"Measure line";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("MapClient.action.ModifyGeometry",{extend:MapClient.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;void 0===a.drag&&(a.drag=!0);void 0===a.rotate&&(a.rotate=!0);var c=0;a.drag&&(c|=OpenLayers.Control.ModifyFeature.DRAG);a.rotate&&(c|=OpenLayers.Control.ModifyFeature.ROTATE);a.resize&&(c|=OpenLayers.Control.ModifyFeature.RESIZE);a.reshape&&(c|=OpenLayers.Control.ModifyFeature.RESHAPE);c=Ext.apply({mode:c},a.options);a.control=new OpenLayers.Control.ModifyFeature(b,c);a.control._mode=
a.control.mode;a.iconCls=a.iconCls||"action-modifygeometry";a.tooltip=a.tooltip||"Modify geometry";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("MapClient.action.Print",{extend:MapClient.action.Action,constructor:function(a){var b=a.mapPanel.plugins[0],c=b.printProvider,d=null,e=null,f=function(){d.down("#scale").select(e.scale)},j=function(){d&&d.setLoading(!1)},g=function(a,b){d&&d.setLoading(!1);Ext.Msg.show({title:"Felmeddelande",msg:"Print failed.\n\n"+b.responseText,icon:Ext.Msg.ERROR})},h=function(){c.un("beforedownload",j);c.on("printexception",g);b.control.events.unregister("transformcomplete",null,f);b.removePage(e);
b.hide();d=null;i.deactivate()};a.iconCls=a.iconCls||"action-print";a.tooltip=a.tooltip||"Print";a.toggleGroup="extraTools";var i=new (OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments)},type:OpenLayers.Control.TYPE_TOGGLE,activate:function(){d||(b.hide(),b.show(),e=b.addPage(),d=new Ext.Window({autoHeight:!0,width:250,resizable:!1,layout:"fit",bodyPadding:"5 5 0",title:"Print settings",listeners:{close:h},items:[{xtype:"form",
layout:"anchor",defaults:{anchor:"100%"},fieldDefaults:{labelWidth:75},items:[{xtype:"combo",fieldLabel:"Layout",store:c.layouts,displayField:"name",valueField:"name",queryMode:"local",value:c.layouts.first().get("name"),listeners:{select:function(a,b){c.setLayout(b[0])}}},{xtype:"combo",fieldLabel:"Resolution",store:c.dpis,displayField:"name",valueField:"value",queryMode:"local",value:c.dpis.first().get("value"),listeners:{select:function(a,b){c.setDpi(b[0])}}},{xtype:"combo",fieldLabel:"Scale",
store:c.scales,displayField:"name",valueField:"value",queryMode:"local",itemId:"scale",value:c.scales.first().get("value"),listeners:{select:function(a,b){e.setScale(b[0],"m")}}}]}],bbar:["->",{text:"Skriv ut",handler:function(){d.setLoading(!0);b.print()}}]}),d.show(),d.down("#scale").select(e.scale),b.control.events.register("transformcomplete",null,f),b.control.events.register("transformcomplete",null,f),c.on("beforedownload",j),c.on("printexception",g),OpenLayers.Control.prototype.activate.apply(this,
arguments))},deactivate:function(){d&&d.close();OpenLayers.Control.prototype.deactivate.apply(this,arguments)}}))({type:OpenLayers.Control.TYPE_TOGGLE});a.control=i;this.callParent(arguments)}});Ext.define("MapClient.action.SelectGeometry",{extend:MapClient.action.Action,constructor:function(a){a.control=a.mapPanel.selectControl;a.iconCls=a.iconCls||"action-selectgeometry";a.tooltip=a.tooltip||"Select geometry";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("MapClient.config.Parser",{parse:function(a){var b={resolutions:[256,128,36,12,4,2,1,0.5,0.25,0.125],units:"m",projection:"EPSG:3006",fallThrough:!0,controls:["Navigation","KeyboardDefaults"]};b.maxExtent=a.maxExtent;b.extent=a.extent;b.allOverlays=!a.layers.some(this.testForBaseLayer);b.controls=b.controls.map(this.createControl);b.layers=a.layers.map(this.createLayer);return new OpenLayers.Map(b)},testForBaseLayer:function(a){return a.options&&a.options.isBaseLayer?!0:!1},createControl:function(a){return a.constructor==
String?new OpenLayers.Control[a]:new OpenLayers.Control[a.type](a.options)},createLayer:function(a){return new OpenLayers.Layer.WMS(a.name,a.url,a.params,a.options)}});
Ext.define("MapClient.form.SearchAddress",{extend:Ext.form.field.ComboBox,alias:"widget.searchaddress",require:["Ext.data.*","Ext.form.*"],initComponent:function(){function a(a,b,f){this.mapPanel.setLoading(!0);this.mapPanel.searchLayer.destroyFeatures();Ext.Ajax.request({url:this.basePath+"registerenheter?fnr="+a,success:function(a){!1===Ext.decode(a.responseText).success?Ext.Msg.alert("Meddelande","Ingen fastighet kunde hittas p\u00e5 adressen."):(this.resultPanel.expand(),a=(new OpenLayers.Format.GeoJSON).read(a.responseText,
"FeatureCollection"),c.addFeatures(a),a=new OpenLayers.Geometry.Point(b,f),feature=new OpenLayers.Feature.Vector(a),c.addFeatures([feature]),a=this.mapPanel.map.getZoomForResolution(OpenLayers.Util.getResolutionFromScale(1E3,"m")),this.mapPanel.map.setCenter([b,f],a),MapClient.app.fireEvent("searchresult",feature))},failure:function(){Ext.Msg.alert("Fel","Ok\u00e4nt.")},callback:function(){this.mapPanel.setLoading(!1)},scope:this})}var b=Ext.Object.fromQueryString(location.search).registeromrade,
c=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:this.basePath+"addresses",reader:{type:"array"}},fields:["id","name","x","y","fnr"]});this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(b,c){a.call(this,c[0].data.fnr,c[0].data.x,c[0].data.y)},beforequery:function(a){b&&null==a.query.match(b)&&(a.query=b+" "+a.query)},scope:this};this.callParent(arguments)}});
Ext.define("MapClient.form.SearchPlacename",{extend:Ext.form.field.ComboBox,alias:"widget.searchplacename",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a=Ext.Object.fromQueryString(location.search).kommunkod;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:this.basePath+"placenames",reader:{type:"json",root:"features"},extraParams:{kommunkod:a}},fields:[{name:"id",mapping:"properties.id"},{name:"name",mapping:"properties.name"}]});this.labelWidth=60;this.displayField=
"name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,c){this.mapPanel.map.setCenter(c[0].raw.geometry.coordinates,5)},scope:this};this.callParent(arguments)}});
Ext.define("MapClient.form.SearchRegisterenhet",{extend:Ext.form.field.ComboBox,alias:"widget.searchregisterenhet",require:["Ext.data.*","Ext.form.*"],initComponent:function(){function a(a){this.mapPanel.setLoading(!0);this.mapPanel.searchLayer.destroyFeatures();Ext.Ajax.request({url:this.basePath+"registerenheter/"+a+"/enhetsomraden",success:function(a){this.resultPanel.expand();a=(new OpenLayers.Format.GeoJSON).read(a.responseText);c.addFeatures(a);this.mapPanel.map.zoomToExtent(c.getDataExtent())},
failure:function(){Ext.Msg.alert("Fel","Ingen tr\u00e4ff.")},callback:function(){this.mapPanel.setLoading(!1)},scope:this})}var b=Ext.Object.fromQueryString(location.search).registeromrade,c=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:this.basePath+"registerenheter",reader:{type:"json",root:"features"}},fields:[{name:"id",mapping:"properties.objid"},{name:"name",mapping:"properties.name"}]});this.labelWidth=60;this.displayField="name";this.valueField="id";
this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(b,c){var f=c[0].get("id");a.call(this,f)},beforequery:function(a){b&&null==a.query.match(b)&&(a.query=b+" "+a.query)},scope:this};this.callParent(arguments)}});
Ext.define("MapClient.view.BaseLayers",{extend:Ext.toolbar.Toolbar,border:!1,cls:"oep-map-tools",constructor:function(a){var b=a.mapPanel,c=b.map,d=b.map.layers.filter(function(a){return a.isBaseLayer});this.items=d.map(function(a){var b=void 0;a==d[d.length-1]&&(b="oep-tools-last");return Ext.create("Ext.Button",{text:a.name,toggleGroup:"baseLayers",allowDepress:!1,layer:a,pressed:a.visibility,cls:b,listeners:{toggle:function(b,d){d&&c.setBaseLayer(a)}}})});c.events.register("changebaselayer",this,
this.onChangeBaseLayer);this.callParent(arguments)},onChangeBaseLayer:function(a){this.items.each(function(b){b.toggle(b.layer==a.layer,!0)})}});
Ext.define("MapClient.view.Layers",{extend:GeoExt.tree.Panel,autoScroll:!0,lines:!1,rootVisible:!1,width:300,border:!1,initComponent:function(){this.renderTo||(this.title="Lager",this.bodyPadding=5,this.collapsible=!0);this.store=Ext.create("Ext.data.TreeStore",{model:"GeoExt.data.LayerTreeModel",root:{expanded:!0,plugins:[{ptype:"gx_layercontainer",store:this.mapPanel.layers}]}});this.callParent(arguments)}});
Ext.define("MapClient.view.Map",{extend:GeoExt.panel.Map,border:!1,anchor:"100% 100%",constructor:function(a){this.initDefaultLayers(a);var b=Ext.create("GeoExt.data.MapfishPrintProvider",{url:"/print/pdf",autoLoad:!0,listeners:{encodelayer:function(a,b,e){e&&e.baseURL&&(e.baseURL=e.baseURL.replace("gwc/service/",""))}}}),b=Ext.create("GeoExt.plugins.PrintExtent",{printProvider:b});a.plugins=[b];this.callParent(arguments);this.layers.add(this.searchLayer);this.layers.add(this.drawLayer);this.selectControl=
new OpenLayers.Control.SelectFeature(this.drawLayer);this.map.addControl(this.selectControl)},unselectAll:function(){this.drawLayer.selectedFeatures.forEach(function(a){this.selectControl.unselect(a)},this)},parseStyle:function(a){var b={Point:{pointRadius:4,graphicName:"square",fillColor:"#e8ffee",fillOpacity:0.9,strokeWidth:1,strokeOpacity:1,strokeColor:"#29bf4c"},Line:{strokeWidth:3,strokeColor:"#29bf4c",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#29bf4c",fillColor:"#e8ffee",
fillOpacity:0.9}},c=function(a){var c=Ext.clone(b);a.Point?(Ext.apply(c.Point,a.Point),Ext.apply(c.Line,a.Line),Ext.apply(c.Polygon,a.Polygon)):(Ext.apply(c.Point,a),Ext.apply(c.Line,a),Ext.apply(c.Polygon,a));return c},d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:b})]}),e=void 0,f=void 0;if(a&&(a["default"]&&(d=c(a["default"]),d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]})),a.select&&(e=c(a.select),e=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:e})]})),
a.temporary&&(f=c(a.temporary),f=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:f})]})),!a["default"]))d=c(a),d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]});a={"default":d};e&&(a.select=e);f&&(a.temporary=f);return new OpenLayers.StyleMap(a)},initDefaultLayers:function(a){a.map.drawStyle||(a.map.drawStyle={"default":{Point:{pointRadius:4,graphicName:"square",fillColor:"#ffffff",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#2969bf"},Line:{strokeWidth:3,
strokeColor:"#2969bf",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969bf",fillOpacity:0}},select:{strokeWidth:3,strokeOpacity:1,fillColor:"#deecff",fillOpacity:0.9,strokeColor:"#2969bf"},temporary:{strokeWidth:3,strokeOpacity:0.75,fillColor:"#ff00ff",fillOpacity:0,strokeColor:"#ff00ff"}});this.drawLayer=new OpenLayers.Layer.Vector("Drawings",{displayInLayerSwitcher:!1,styleMap:this.parseStyle(a.map.drawStyle)});a.map.autoClearDrawLayer&&this.drawLayer.events.register("beforefeatureadded",
this,function(){this.drawLayer.destroyFeatures()});this.drawLayer.events.register("beforefeaturemodified",this,function(a){this.selectControl.select(a.feature)});this.drawLayer.events.register("afterfeaturemodified",this,function(){});this.searchLayer=new OpenLayers.Layer.Vector("Searchresult",{displayInLayerSwitcher:!1,styleMap:this.parseStyle({strokeDashstyle:"dot",strokeWidth:3,strokeOpacity:1,strokeColor:"#f58d1e",fillOpacity:0})})}});
Ext.define("MapClient.view.SearchCoordinate",{extend:Ext.container.Container,layout:"column",defaults:{labelWidth:20},width:300,border:!1,initComponent:function(a){this.items=[{itemId:"e",fieldLabel:"E",xtype:"textfield",columnWidth:0.5},{itemId:"n",fieldLabel:"N",xtype:"textfield",columnWidth:0.5},{xtype:"button",text:"S\u00f6k",handler:function(){var a=this.down("#e").getValue(),c=this.down("#n").getValue();this.mapPanel.map.setCenter([a,c],5)},scope:this}];this.callParent(arguments)}});
Ext.define("MapClient.view.SearchFastighet",{extend:Ext.form.Panel,width:400,border:!1,initComponent:function(){function a(a){return{xtype:a,mapPanel:this.mapPanel,basePath:this.basePath,resultPanel:c}}this.renderTo||(this.title="S\u00f6k fastighet",this.bodyPadding=5);var b=Ext.create("GeoExt.data.FeatureStore",{layer:this.mapPanel.searchLayer,featureFilter:new OpenLayers.Filter.Function({evaluate:function(a){return a.attributes.name?true:false}}),fields:[{name:"name"},{name:"fid"},{name:"objid"}]}),
c=Ext.create("Ext.grid.Panel",{columns:[{text:"Namn",dataIndex:"name",flex:1}],store:b,selType:"featuremodel"});this.items=[{layout:"column",border:!1,items:[{xtype:"combo",width:110,store:[["searchregisterenhet","Fastighet"],["searchaddress","Adress"],["searchplacename","Ort"]],forceSelection:!0,queryMode:"local",value:"searchregisterenhet",border:!1,listeners:{change:function(b,c){var f=this.down("#search");this.mapPanel.searchLayer.destroyFeatures();f.removeAll();f.add(a.call(this,c))},scope:this}},
{itemId:"search",columnWidth:1,layout:"fit",border:!1,items:a.call(this,"searchregisterenhet")}]}];this.renderTo||this.items.push(c);this.callParent(arguments)}});
Ext.define("MapClient.view.ZoomTools",{extend:Ext.panel.Panel,bodyStyle:"background : transparent",border:!1,getTools:function(){var a=[],b=Ext.create("GeoExt.slider.Zoom",{height:200,vertical:!0,aggressive:!0,margin:"5 0 5 0",map:this.mapPanel.map});a.push({xtype:"button",iconCls:"zoomtools-plus",mapPanel:this.mapPanel,scale:"large",cls:"x-action-btn",listeners:{click:function(){this.mapPanel.map.zoomIn()},scope:this}});a.push(b);a.push({xtype:"button",scale:"large",cls:"x-action-btn",iconCls:"zoomtools-minus",
mapPanel:this.mapPanel,listeners:{click:function(){this.mapPanel.map.zoomOut()},scope:this}});return a},constructor:function(a){Ext.apply(this,a);this.items=this.getTools();this.callParent(arguments)}});