Ext.define("OpenEMap.action.Action",{extend:GeoExt.Action,constructor:function(a){var b=a.mapPanel.map;if(a.minScale||a.maxScale)a.minScale||(a.minScale=0),a.maxScale||(a.maxScale=99999999999999),b.events.register("zoomend",this,function(){b.getScale()>=a.maxScale||b.getScale()<=a.minScale?this.disable():this.enable()});this.callParent(arguments)},toggle:function(){}});
Ext.define("OpenEMap.action.MeasureArea",{extend:OpenEMap.action.Action,constructor:function(a){var b=new OpenLayers.Style;b.addRules([new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969db",strokeDashstyle:"dash"},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969db",strokeDashstyle:"dash",fillColor:"#deecff",fillOpacity:0.4}}})]);
b=new OpenLayers.StyleMap({"default":b});a.control=new OpenLayers.Control.Measure(OpenLayers.Handler.Polygon,{persist:!0,handlerOptions:{layerOptions:{styleMap:b}}});var c="",d=1,e=!0;a.control.events.on({measure:function(a){var b=a.units,d=a.measure;c=1==a.order?c+("Totalt: "+d.toFixed(3)+" "+b+"\x3cbr\x3e"):c+("Totalt: "+d.toFixed(3)+" "+b+"\x3csup\x3e2\x3c/sup\x3e\x3cbr\x3e");OpenEMap.action.MeasureLine.measureWindow.update(c);e=!0},measurepartial:function(a){OpenEMap.action.MeasureLine.createMeasureWindow();
OpenEMap.action.MeasureLine.measureWindow.show();var b=a.geometry,g=a.units,j=a.order;a=a.measure;e&&(c="",d=1,e=!1);g=b.components[b.components.length-2];b=b.components[b.components.length-3];void 0===g||void 0===b||(a=g.distanceTo(b),g="m",c=1==j?c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"\x3cbr\x3e"):c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"\x3csup\x3e2\x3c/sup\x3e\x3cbr\x3e"),OpenEMap.action.MeasureLine.measureWindow.update(c),d+=1)}});a.iconCls=a.iconCls||"action-measurearea";
a.tooltip=a.tooltip||"Measure area";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.Print",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel.plugins[0],c=b.printProvider,d=null,e=null,f=function(){d.down("#scale").select(e.scale)},h=function(){d&&d.setLoading(!1)},g=function(a,b){d&&d.setLoading(!1);Ext.Msg.show({title:"Felmeddelande",msg:"Print failed.\n\n"+b.responseText,icon:Ext.Msg.ERROR})},j=function(){c.un("beforedownload",h);c.on("printexception",g);b.control.events.unregister("transformcomplete",null,f);b.removePage(e);b.hide();
d=null;l.deactivate()};a.iconCls=a.iconCls||"action-print";a.tooltip=a.tooltip||"Print";a.toggleGroup="extraTools";var l=new (OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments)},type:OpenLayers.Control.TYPE_TOGGLE,activate:function(){d||(b.hide(),b.show(),e=b.addPage(),d=new Ext.Window({autoHeight:!0,width:250,resizable:!1,layout:"fit",bodyPadding:"5 5 0",title:"Print settings",listeners:{close:j},items:[{xtype:"form",layout:"anchor",
defaults:{anchor:"100%"},fieldDefaults:{labelWidth:75},items:[{xtype:"combo",fieldLabel:"Layout",store:c.layouts,displayField:"name",valueField:"name",queryMode:"local",value:c.layouts.first().get("name"),listeners:{select:function(a,b){c.setLayout(b[0])}}},{xtype:"combo",fieldLabel:"Resolution",store:c.dpis,displayField:"name",valueField:"value",queryMode:"local",value:c.dpis.first().get("value"),listeners:{select:function(a,b){c.setDpi(b[0])}}},{xtype:"combo",fieldLabel:"Scale",store:c.scales,displayField:"name",
valueField:"value",queryMode:"local",itemId:"scale",value:c.scales.first().get("value"),listeners:{select:function(a,b){e.setScale(b[0],"m")}}}]}],bbar:["-\x3e",{text:"Skriv ut",handler:function(){d.setLoading(!0);b.print()}}]}),d.show(),d.down("#scale").select(e.scale),b.control.events.register("transformcomplete",null,f),b.control.events.register("transformcomplete",null,f),c.on("beforedownload",h),c.on("printexception",g),OpenLayers.Control.prototype.activate.apply(this,arguments))},deactivate:function(){d&&
d.close();OpenLayers.Control.prototype.deactivate.apply(this,arguments)}}))({type:OpenLayers.Control.TYPE_TOGGLE});a.control=l;this.callParent(arguments)}});
Ext.define("OpenEMap.action.DrawGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;a.attributes=a.attributes||{};a.geometry=a.geometry||"Polygon";var c=OpenLayers.Class(OpenLayers.Control.DrawFeature,{drawFeature:function(b){b=new OpenLayers.Feature.Vector(b,a.attributes,a.style);!1!==this.layer.events.triggerEvent("sketchcomplete",{feature:b})&&(b.state=OpenLayers.State.INSERT,this.layer.addFeatures([b]),this.featureAdded(b),this.events.triggerEvent("featureadded",
{feature:b}))}});a.control=new c(b,OpenLayers.Handler[a.geometry]);a.iconCls=a.iconCls||"action-drawgeometry";a.tooltip=a.tooltip||"Draw geometry";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.MeasureLine",{extend:OpenEMap.action.Action,statics:{measureWindow:null,createMeasureWindow:function(){this.measureWindow?this.measureWindow.update(""):this.measureWindow=Ext.create("Ext.window.Window",{title:"M\u00e4tresultat",maximizable:!1,minimizable:!1,resizable:!0,width:300,height:200,autoScroll:!0,layout:"fit",collapsible:!1,closeAction:"hide"})}},constructor:function(a){var b=new OpenLayers.Style;b.addRules([new OpenLayers.Rule({symbolizer:{Point:{pointRadius:4,
graphicName:"square",fillColor:"white",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#333333"},Line:{strokeWidth:3,strokeOpacity:1,strokeColor:"#666666",strokeDashstyle:"dash"},Polygon:{strokeWidth:2,strokeOpacity:1,strokeColor:"#666666",fillColor:"white",fillOpacity:0.3}}})]);b=new OpenLayers.StyleMap({"default":b});a.control=new OpenLayers.Control.Measure(OpenLayers.Handler.Path,{persist:!0,handlerOptions:{layerOptions:{styleMap:b}}});var c="",d=1,e=!0;a.control.events.on({measure:function(a){var b=
a.units,d=a.measure;c=1==a.order?c+("Totalt: "+d.toFixed(3)+" "+b+"\x3cbr\x3e"):c+("Totalt: "+d.toFixed(3)+" "+b+"\x3csup\x3e2\x3c/sup\x3e\x3cbr\x3e");OpenEMap.action.MeasureLine.measureWindow.update(c);e=!0},measurepartial:function(a){OpenEMap.action.MeasureLine.createMeasureWindow();OpenEMap.action.MeasureLine.measureWindow.show();var b=a.geometry,g=a.units,j=a.order;a=a.measure;e&&(c="",d=1,e=!1);g=b.components[b.components.length-2];b=b.components[b.components.length-3];void 0===g||void 0===b||
(a=g.distanceTo(b),g="m",c=1==j?c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"\x3cbr\x3e"):c+("Delstr\u00e4cka "+d+" : "+a.toFixed(3)+" "+g+"\x3csup\x3e2\x3c/sup\x3e\x3cbr\x3e"),OpenEMap.action.MeasureLine.measureWindow.update(c),d+=1)}});a.iconCls=a.iconCls||"action-measureline";a.tooltip=a.tooltip||"Measure line";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.view.IdentifyResults",{extend:Ext.panel.Panel,autoScroll:!0,layout:{type:"vbox",pack:"start",align:"stretch"},initComponent:function(){var a=Ext.create("Ext.data.TreeStore",{root:{expanded:!0}});this.root=a.getRootNode();this.items=[{xtype:"treepanel",flex:1,rootVisible:!1,store:a,minHeight:200,listeners:{select:this.onSelect,scope:this}},{flex:2,autoScroll:!0,title:"Egenskaper",collapsible:!0,collapsed:!1,xtype:"propertygrid",stripeRows:!0}];this.callParent(arguments)},onSelect:function(a,
b){var c={},d=b.raw.feature,e=b.raw.layer,f=function(a){e.metadata.attributes[a]&&(c[e.metadata.attributes[a].alias||a]=d.attributes[a])};d&&(e.metadata&&e.metadata.attributes?Object.keys(d.attributes).forEach(f):c=d.attributes,this.mapPanel.searchLayer.selectedFeatures.forEach(function(a){this.mapPanel.selectControl.unselect(a)},this),b.raw.feature.layer&&this.mapPanel.selectControl.select(d));this.down("propertygrid").setSource(c)},addResult:function(a,b){var c=this.root.appendChild({text:b.name,
leaf:!1,expanded:!0});a.forEach(function(a){c.appendChild({text:a.attributes[Object.keys(a.attributes)[0]],leaf:!0,feature:a,layer:b})})}});
Ext.define("OpenEMap.action.Identify",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel,c=b.searchLayer,d=a.map,e=a.layers,f=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(a){b.setLoading(!0);c.destroyFeatures();var f=d.getLonLatFromPixel(a.xy);a=f.lon;var f=f.lat,j=new OpenLayers.Geometry.Point(a,
f),l=new OpenLayers.Feature.Vector(j);c.addFeatures([l]);var k=Ext.create("OpenEMap.view.IdentifyResults",{mapPanel:b});Ext.create("GeoExt.window.Popup",{title:"S\u00f6kresultat",location:l,anchored:!1,unpinnable:!1,draggable:!0,map:b,maximizable:!1,minimizable:!1,resizable:!0,width:300,height:400,layout:"fit",items:k,collapsible:!1}).show();OpenEMap.requestLM({url:"registerenheter?x\x3d"+a+"\x26y\x3d"+f,success:function(a){a=Ext.decode(a.responseText);a=new OpenLayers.Feature.Vector(j,{name:a.name});
k.addResult([a],"Fastigheter")},failure:function(a){Ext.Msg.alert("Fel",a.statusText)},callback:function(){b.setLoading(!1)}});Ext.create("OpenEMap.config.Parser").extractWFS(e).forEach(function(a){var b=Ext.apply({version:"1.1.0",srsName:"EPSG:3006"},a.wfs);(new OpenLayers.Protocol.WFS(b)).read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.BBOX,value:j.getBounds()}),callback:function(b){if((b=b.features)&&0<b.length)k.addResult(b,a),c.addFeatures(b)}})})}});a.control=new f({type:OpenLayers.Control.TYPE_TOGGLE});
a.iconCls=a.iconCls||"action-identify";a.tooltip=a.tooltip||"Identify";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.MetadataInfoColumn",{extend:Ext.grid.column.Action,requrires:["Ext.tip.ToolTip","OpenEMap.common.Util"],text:"",width:22,menuDisabled:!0,xtype:"actioncolumn",align:"center",iconCls:"action-identify",url:null,metadata_abstract_cache:{},initComponent:function(a){var b=this;this.tip=Ext.create("Ext.tip.ToolTip",{trackMouse:!0});this.listeners={mouseover:function(a,d,e,f,h){b.tip.setTarget(h.target);var g=OpenEMap.common.Util.randomUUID();b.metadata_abstract_cache[g]?b.updateTooltip(b.metadata_abstract_cache[g]["abstract"]):
b.getAbstract(OpenEMap.common.Util.randomUUID(),function(a){a["abstract"]&&(b.updateTooltip(a["abstract"]),b.metadata_abstract_cache[g]=a)})},mouseout:function(){b.tip.update(null);b.tip.hide()},click:function(){b.metadataWindow&&(b.tip.update(null),b.metadataWindow.showMetadata(OpenEMap.common.Util.randomUUID()))}};this.callParent(arguments)},updateTooltip:function(){me.tip.update(json["abstract"].substr(0,180)+"...");me.tip.show()},getAbstract:function(a,b){a&&this.url&&OpenEMap.common.Util.doRequest({url:this.url+
a},b)}});
Ext.define("OpenEMap.view.DetailReportResults",{extend:Ext.view.View,autoScroll:!0,padding:5,geometry:null,initComponent:function(){this.store=Ext.create("GeoExt.data.FeatureStore",{features:[],fields:"COUNT CATEGORY CLARIFICAT DESCRIPTIO REMARK MAPTEXT MAX MIN HEIGHT".split(" ")});this.tpl=new Ext.XTemplate("\x3ch3\x3e"+this.fbet+"\x3c/h3\x3e","\x3ch4\x3e"+this.aktbet+"\x3c/h4\x3e",'\x3ctpl for\x3d"."\x3e','\x3cdiv style\x3d"margin-bottom: 10px;" class\x3d"thumb-wrap"\x3e',"\x3ch4\x3e{COUNT}. {DESCRIPTIO}\x3c/h4\x3e","\x3cp\x3e{REMARK}\x3c/p\x3e",
"\x3c/div\x3e","\x3c/tpl\x3e");this.itemSelector="div.thumb-wrap";this.callParent(arguments);this.doSearch()},doSearch:function(){var a=this.store,b=this.layer,c=this.geometry;b.destroyFeatures();var d=Ext.apply({url:"wfs",version:"1.1.0",srsName:"EPSG:3006",featureType:"EgenskapsBestammelser_yta",featurePrefix:"RIGES"});(new OpenLayers.Protocol.WFS(d)).read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.INTERSECTS,value:c}),callback:function(c){if(c=c.features)c.forEach(function(b){b.attributes.COUNT=
a.getCount()+1;a.addFeatures([b])}),b.addFeatures(c)}})},onSelect:function(a,b){var c={},d=b.raw.feature,e=b.raw.layer,f=function(a){e.metadata.attributes[a]&&(c[e.metadata.attributes[a].alias||a]=d.attributes[a])};d&&(e.metadata&&e.metadata.attributes?Object.keys(d.attributes).forEach(f):c=d.attributes,this.mapPanel.searchLayer.selectedFeatures.forEach(function(a){this.mapPanel.selectControl.unselect(a)},this),b.raw.feature.layer&&this.mapPanel.selectControl.select(d))}});
Ext.define("OpenEMap.action.DetailReport",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel,c=b.searchLayer,d=a.map,e=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:function(a){b.setLoading(!0);c.destroyFeatures();var e=d.getLonLatFromPixel(a.xy);a=e.lon;var e=e.lat,g=new OpenLayers.Geometry.Point(a,e),g=
new OpenLayers.Feature.Vector(g);c.addFeatures([g]);OpenEMap.requestLM({url:"enhetsomraden?x\x3d"+a+"\x26y\x3d"+e,success:function(a){a=(new OpenLayers.Format.GeoJSON).read(a.responseText);c.addFeatures(a);var e=c.getDataExtent();d.zoomToExtent(e);var e=a[0].geometry,f=a[0].attributes.name;a=Ext.apply({url:"wfs",version:"1.1.0",srsName:"EPSG:3006",featureType:"DetaljplanGallande_yta",featurePrefix:"RIGES"});(new OpenLayers.Protocol.WFS(a)).read({filter:new OpenLayers.Filter({type:OpenLayers.Filter.Spatial.INTERSECTS,
value:e}),callback:function(a){if((a=a.features)&&0<a.length)c.addFeatures(a),a=Ext.create("OpenEMap.view.DetailReportResults",{mapPanel:b,fbet:f,aktbet:a[0].attributes.AKTBET,geometry:a[0].geometry,layer:b.drawLayer}),Ext.create("GeoExt.window.Popup",{title:"Rapport",anchored:!1,unpinnable:!1,draggable:!0,map:b,maximizable:!1,minimizable:!1,resizable:!0,width:300,height:400,layout:"fit",items:a,collapsible:!1}).show()}})},scope:this,callback:function(){b.setLoading(!1)}})}});a.control=new e({type:OpenLayers.Control.TYPE_TOGGLE});
a.iconCls=a.iconCls||"action-detailreport";a.tooltip=a.tooltip||"Detail report";a.toggleGroup="extraTools";this.callParent(arguments)}});Ext.define("OpenEMap.action.FullExtent",{extend:OpenEMap.action.Action,constructor:function(a){a.control=new OpenLayers.Control.ZoomToMaxExtent;a.iconCls=a.iconCls||"action-fullextent";a.tooltip=a.tooltip||"Zoom to full extent";this.callParent(arguments)}});
Ext.define("OpenEMap.action.SelectGeometry",{extend:OpenEMap.action.Action,constructor:function(a){a.control=a.mapPanel.selectControl;a.iconCls=a.iconCls||"action-selectgeometry";a.tooltip=a.tooltip||"Select geometry";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.ModifyGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel.drawLayer;void 0===a.drag&&(a.drag=!0);void 0===a.rotate&&(a.rotate=!0);var c=0;a.drag&&(c|=OpenLayers.Control.ModifyFeature.DRAG);a.rotate&&(c|=OpenLayers.Control.ModifyFeature.ROTATE);a.resize&&(c|=OpenLayers.Control.ModifyFeature.RESIZE);a.reshape&&(c|=OpenLayers.Control.ModifyFeature.RESHAPE);c=Ext.apply({mode:c},a.options);a.control=new OpenLayers.Control.ModifyFeature(b,c);a.control._mode=
a.control.mode;a.iconCls=a.iconCls||"action-modifygeometry";a.tooltip=a.tooltip||"Modify geometry";a.toggleGroup="extraTools";this.callParent(arguments)}});
Ext.define("OpenEMap.action.DeleteGeometry",{extend:OpenEMap.action.Action,constructor:function(a){var b=a.mapPanel,c=b.drawLayer;a.handler=function(){c.selectedFeatures.forEach(function(a){b.map.controls.forEach(function(b){"OpenLayers.Control.ModifyFeature"==b.CLASS_NAME&&b.active&&b.unselectFeature(a)});c.destroyFeatures([a])})};a.iconCls=a.iconCls||"action-deletegeometry";a.tooltip=a.tooltip||"Delete geometry";this.callParent(arguments)}});
Ext.define("OpenEMap.ObjectFactory",{toPoint:function(a){return new OpenLayers.Geometry.Point(a[0],a[1])},createR:function(a){var b=a.x,c=a.y,d=a.l;a=a.w;b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-d],[b+a,c-d],[b+a,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},createL:function(a){var b=a.x,c=a.y,d=a.l,e=a.w,f=a.m1;a=a.m2;b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-e],[b+f,c-e],[b+f,c-a],[b+d,c-a],[b+d,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},
createD:function(a){var b=a.x,c=a.y,d=a.l,e=a.w;a=(d-a.m1)/2;b=new OpenLayers.Geometry.LinearRing([[b,c],[b,c-e+a],[b+a,c-e],[b+d-a,c-e],[b+d,c-e+a],[b+d,c]].map(this.toPoint));return new OpenLayers.Geometry.Polygon([b])},createO:function(a){var b=a.x,c=a.y;a=a.m1/2*Math.sqrt(4+2*Math.SQRT2);b=new OpenLayers.Geometry.Point(b+a,c-a);return OpenLayers.Geometry.Polygon.createRegularPolygon(b,a,8)},figurHooks:function(a){var b=a.geometry.move;a.geometry.move=function(c,e){a.attributes.config.x+=c;a.attributes.config.y+=
e;b.apply(a.geometry,arguments)};var c=a.geometry.rotate;a.geometry.rotate=function(b,e){a.attributes.config.angle+=b;c.apply(a.geometry,arguments)}},create:function(a,b,c){var d;d="R"==a.type?this.createR(a):"L"==a.type?this.createL(a):"D"==a.type?this.createD(a):this.createO(a);var e=d.getCentroid(),e=new OpenLayers.Geometry.Point(e.x,e.y);d.rotate(a.angle,e);b=new OpenLayers.Feature.Vector(d,b,c);this.figurHooks(b);b.attributes.config=a;return b}});
Ext.define("OpenEMap.view.ObjectConfig",{extend:Ext.form.Panel,statics:{config:{type:"R",w:10,l:10,m1:2,m2:2,angle:0}},fieldDefaults:{labelWidth:60},autoHeight:!0,width:400,border:!1,selectedFeature:void 0,layer:void 0,factory:void 0,hidden:!0,defaults:{border:!1},typeLabel:"Type",widthLabel:"Width",lengthLabel:"Length",m1Label:"M1",m2Label:"M2",angleLabel:"Angle",initComponent:function(){this.layer=this.mapPanel.drawLayer;this.factory=Ext.create("OpenEMap.ObjectFactory");var a=[];a.push({xtype:"radiogroup",
vertical:!0,fieldLabel:this.typeLabel,itemId:"type",hidden:!0,items:[{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-r"\x3e\x3c/div\x3e',name:"rb",inputValue:"R",checked:!0},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-l"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"L"},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-d"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"D"},{boxLabel:'\x3cdiv class\x3d"objectconfig-radio-o"\x3e\x3c/div\x3e',name:"rb",enabled:!1,inputValue:"O"}],listeners:{change:function(a,
c){this.config.type=c.rb;this.updateHelpImage(this.config.type);this.setFormItemVisibility(this.config.type);this.createObject()},scope:this}});a=a.concat([{xtype:"numberfield",fieldLabel:this.widthLabel,itemId:"w",minValue:0,listeners:{change:function(a,c){this.config.w=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.lengthLabel,itemId:"l",minValue:0,listeners:{change:function(a,c){this.config.l=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.m1Label,
itemId:"m1",minValue:0,listeners:{change:function(a,c){this.config.m1=c;this.createObject()},scope:this}},{xtype:"numberfield",fieldLabel:this.m2Label,itemId:"m2",minValue:0,listeners:{change:function(a,c){this.config.m2=c;this.createObject()},scope:this}},{xtype:"numberfield",itemId:"angle",fieldLabel:this.angleLabel,value:0,listeners:{change:function(a,c){this.config.angle=c;this.createObject()},scope:this}}]);this.attributeFields=Ext.create("Ext.container.Container",{title:"Attributes"});a.push(this.attributeFields);
this.items=[{layout:"column",defaults:{border:!1},padding:5,items:[{width:180,layout:"form",items:a},{columnWidth:1,padding:5,items:{itemId:"objectimage",border:!1,height:200}}]}];this.layer.events.register("featuremodified",this,this.onFeaturemodified);this.layer.events.register("beforefeatureselected",this,this.onBeforefeatureselected);this.layer.events.register("featureunselected",this,this.onFeatureunselected);this.callParent(arguments)},setConfig:function(a){void 0===a?(this.config=Ext.clone(OpenEMap.view.ObjectConfig.config),
this.down("#type").show()):a.type?(this.config=Ext.clone(a),Ext.applyIf(this.config,OpenEMap.view.ObjectConfig.config),this.down("#type").hide()):(this.config=Ext.clone(a),Ext.applyIf(this.config,OpenEMap.view.ObjectConfig.config),this.down("#type").show());this.setFormValues();this.show();return this.config},setFormValues:function(){this.config?(this.down("#type").setValue({rb:this.config.type}),this.updateHelpImage(this.config.type),this.down("#w").setRawValue(this.config.w),this.down("#l").setRawValue(this.config.l),
this.down("#m1").setRawValue(this.config.m1),this.down("#m2").setRawValue(this.config.m2),this.down("#angle").setRawValue(this.config.angle),this.setFormItemVisibility(this.config.type),this.down("#angle").show()):(this.down("#type").hide(),this.down("#w").hide(),this.down("#l").hide(),this.down("#m1").hide(),this.down("#m2").hide(),this.down("#angle").hide(),this.down("#objectimage").hide());this.attributeFields.removeAll();this.selectedFeature&&Object.keys(this.selectedFeature.attributes).forEach(function(a){this.createAttributeField(this.selectedFeature,
a)},this);this.doLayout()},createAttributeField:function(a,b){if(!("config"==b||"metadata"==b)){var c=a.attributes.metadata;(!c||!c[b]||!c[b].hidden)&&this.attributeFields.add({xtype:"textfield",fieldLabel:b,value:a.attributes[b],listeners:{change:function(a,c){this.selectedFeature.attributes[b]=c;this.layer.drawFeature(this.selectedFeature)},scope:this}})}},setFormItemVisibility:function(a){"R"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").hide(),this.down("#m2").hide()):"L"==
a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").show(),this.down("#m2").show()):"D"==a?(this.down("#w").show(),this.down("#l").show(),this.down("#m1").show(),this.down("#m2").hide()):"O"==a&&(this.down("#w").hide(),this.down("#l").hide(),this.down("#m1").show(),this.down("#m2").hide())},onFeaturemodified:function(a){(config=a.feature.attributes.config)&&this.down("#angle").setRawValue(config.angle)},onBeforefeatureselected:function(a){this.selectedFeature=a=a.feature;this.config=
a.attributes.config;if((a=this.gui.activeAction)&&a.control instanceof OpenLayers.Control.ModifyFeature)a.control.mode=this.config&&a.control._mode&OpenLayers.Control.ModifyFeature.RESHAPE?a.control._mode^OpenLayers.Control.ModifyFeature.RESHAPE:a.control._mode,a.control.resetVertices();this.show();this.setFormValues()},onFeatureunselected:function(){0===this.layer.selectedFeatures.length&&this.hide();this.selectedFeature=void 0},createObject:function(a,b,c){this.selectedFeature&&this.selectedFeature.attributes.config&&
(a=this.factory.create(this.config,c).geometry,this.selectedFeature.geometry.removeComponent(this.selectedFeature.geometry.components[0]),this.selectedFeature.geometry.addComponent(a.components[0]),this.selectedFeature.modified=!0,this.selectedFeature.geometry.calculateBounds(),this.mapPanel.map.controls.forEach(function(a){"OpenLayers.Control.ModifyFeature"==a.CLASS_NAME&&a.active&&a.resetVertices()}),this.layer.drawFeature(this.selectedFeature),this.layer.events.triggerEvent("featuremodified",{feature:this.selectedFeature}))},
updateHelpImage:function(a){a="figur-"+a+"-help.png";this.down("#objectimage").show();this.down("#objectimage").update('\x3cimg src\x3d"'+OpenEMap.Client.basePathImages+a+'"\x3e\x3c/img\x3e')}});
Ext.define("OpenEMap.action.DrawObject",{extend:OpenEMap.action.Action,constructor:function(a){this.mapPanel=a.mapPanel;this.layer=this.mapPanel.drawLayer;this.style=a.style;this.attributes=a.attributes;this.objectConfig=a.objectConfig;this.objectConfigView=a.objectConfigView;this.factory=Ext.create("OpenEMap.ObjectFactory");this.attributes=this.attributes||{};var b=OpenLayers.Class(OpenLayers.Control,{initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=
new OpenLayers.Handler.Click(this,{click:this.onClick},this.handlerOptions)},onClick:Ext.bind(this.onClick,this)});a.control=new b({type:OpenLayers.Control.TYPE_TOGGLE});a.iconCls=a.iconCls||"action-drawobject";a.tooltip=a.tooltip||"Draw predefined object";a.toggleGroup="extraTools";this.callParent(arguments)},onClick:function(a){a=this.mapPanel.map.getLonLatFromPixel(a.xy);var b=this.objectConfigView?this.objectConfigView.config:MapClient.view.ObjectConfig.config,b=Ext.clone(b);b.x=a.lon;b.y=a.lat;
a=this.factory.create(b,this.attributes,this.style);this.mapPanel.unselectAll();this.layer.addFeatures([a]);this.mapPanel.selectControl.select(a)},toggle:function(a){a&&this.objectConfigView.setConfig(this.objectConfig)}});
Ext.define("OpenEMap.view.BaseLayers",{extend:Ext.toolbar.Toolbar,border:!1,cls:"oep-map-tools",constructor:function(a){var b=a.mapPanel,c=b.map,d=b.map.layers.filter(function(a){return a.isBaseLayer});this.items=d.map(function(a){var b;a==d[d.length-1]&&(b="oep-tools-last");return Ext.create("Ext.Button",{text:a.name,toggleGroup:"baseLayers",allowDepress:!1,layer:a,pressed:a.visibility,cls:b,listeners:{toggle:function(b,d){d&&c.setBaseLayer(a)}}})});c.events.register("changebaselayer",this,this.onChangeBaseLayer);
this.callParent(arguments)},onChangeBaseLayer:function(a){this.items.each(function(b){b.toggle(b.layer==a.layer,!0)})}});
Ext.define("OpenEMap.view.Map",{extend:GeoExt.panel.Map,border:!1,anchor:"100% 100%",constructor:function(a){this.initDefaultLayers(a.config);var b=Ext.create("GeoExt.data.MapfishPrintProvider",{url:"/print/pdf",autoLoad:!0,listeners:{encodelayer:function(a,b,e){e&&e.baseURL&&(e.baseURL=e.baseURL.replace("gwc/service/",""))}}}),b=Ext.create("GeoExt.plugins.PrintExtent",{printProvider:b});a.plugins=[b];this.callParent(arguments);this.layers.add(this.searchLayer);this.layers.add(this.drawLayer);this.selectControl=
new OpenLayers.Control.SelectFeature(this.drawLayer);this.map.addControl(this.selectControl)},unselectAll:function(){this.drawLayer.selectedFeatures.forEach(function(a){this.selectControl.unselect(a)},this)},parseStyle:function(a){var b={Point:{pointRadius:4,graphicName:"square",fillColor:"#e8ffee",fillOpacity:0.9,strokeWidth:1,strokeOpacity:1,strokeColor:"#29bf4c"},Line:{strokeWidth:3,strokeColor:"#29bf4c",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#29bf4c",fillColor:"#e8ffee",
fillOpacity:0.9}},c=function(a){var c=Ext.clone(b);a.Point?(Ext.apply(c.Point,a.Point),Ext.apply(c.Line,a.Line),Ext.apply(c.Polygon,a.Polygon)):(Ext.apply(c.Point,a),Ext.apply(c.Line,a),Ext.apply(c.Polygon,a));return c},d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:b})]}),e,f;a&&(a["default"]&&(d=c(a["default"]),d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]})),a.select&&(e=c(a.select),e=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:e})]})),
a.temporary&&(f=c(a.temporary),f=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:f})]})),a["default"]||(d=c(a),d=new OpenLayers.Style(null,{rules:[new OpenLayers.Rule({symbolizer:d})]})));a={"default":d};e&&(a.select=e);f&&(a.temporary=f);return new OpenLayers.StyleMap(a)},initDefaultLayers:function(a){a.drawStyle||(a.drawStyle={"default":{Point:{pointRadius:4,graphicName:"square",fillColor:"#ffffff",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#2969bf"},Line:{strokeWidth:3,
strokeColor:"#2969bf",strokeOpacity:1},Polygon:{strokeWidth:3,strokeOpacity:1,strokeColor:"#2969bf",fillOpacity:0}},select:{strokeWidth:3,strokeOpacity:1,fillColor:"#deecff",fillOpacity:0.9,strokeColor:"#2969bf"},temporary:{strokeWidth:3,strokeOpacity:0.75,fillColor:"#ff00ff",fillOpacity:0,strokeColor:"#ff00ff"}});this.drawLayer=new OpenLayers.Layer.Vector("Drawings",{displayInLayerSwitcher:!1,styleMap:this.parseStyle(a.drawStyle)});a.autoClearDrawLayer&&this.drawLayer.events.register("beforefeatureadded",
this,function(){this.drawLayer.destroyFeatures()});this.drawLayer.events.register("beforefeaturemodified",this,function(a){this.selectControl.select(a.feature)});this.drawLayer.events.register("afterfeaturemodified",this,function(){});this.searchLayer=new OpenLayers.Layer.Vector("Searchresult",{displayInLayerSwitcher:!1,styleMap:this.parseStyle({Point:{pointRadius:4,graphicName:"square",fillColor:"#ffffff",fillOpacity:1,strokeWidth:1,strokeOpacity:1,strokeColor:"#2969bf"},Line:{strokeWidth:3,strokeColor:"#2969bf",
strokeOpacity:1},Polygon:{strokeDashstyle:"dot",strokeWidth:3,strokeOpacity:1,strokeColor:"#f58d1e",fillOpacity:0}})})}});
Ext.define("OpenEMap.view.SearchCoordinate",{extend:Ext.container.Container,layout:"column",defaults:{labelWidth:20},width:300,border:!1,zoom:5,initComponent:function(a){this.items=[{itemId:"e",fieldLabel:"E",xtype:"textfield",columnWidth:0.5},{itemId:"n",fieldLabel:"N",xtype:"textfield",columnWidth:0.5},{xtype:"button",text:"S\u00f6k",handler:function(){var a=this.down("#e").getValue(),c=this.down("#n").getValue();this.mapPanel.map.setCenter([a,c],this.zoom);this.fireEvent("searchcomplete",[a,c])},
scope:this}];this.addEvents(["searchcomplete"]);this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchRegisterenhet",{extend:Ext.form.field.ComboBox,alias:"widget.searchregisterenhet",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a=Ext.Object.fromQueryString(location.search).registeromrade,b=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"registerenheter",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"json",root:"features"}},fields:[{name:"id",mapping:"properties.objid"},{name:"name",
mapping:"properties.name"}]});this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,d){var e=d[0].get("id");this.mapPanel.setLoading(!0);this.mapPanel.searchLayer.destroyFeatures();OpenEMap.requestLM({url:"registerenheter/"+e+"/enhetsomraden",success:function(a){this.resultPanel.expand();a=(new OpenLayers.Format.GeoJSON).read(a.responseText);b.addFeatures(a);a=b.getDataExtent();this.zoom?this.mapPanel.map.setCenter(a.getCenterLonLat(),
this.zoom):this.mapPanel.map.zoomToExtent(a)},failure:function(){Ext.Msg.alert("Fel","Ingen tr\u00e4ff.")},callback:function(){this.mapPanel.setLoading(!1)},scope:this})},beforequery:function(b){a&&null===b.query.match(a)&&(b.query=a+" "+b.query)},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchAddress",{extend:Ext.form.field.ComboBox,alias:"widget.searchaddress",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a=Ext.Object.fromQueryString(location.search).registeromrade,b=this.mapPanel.searchLayer;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"addresses",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"array"}},fields:["id","name","x","y","fnr"]});this.labelWidth=60;this.displayField="name";this.valueField=
"id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,d){var e=d[0].data.fnr,f=d[0].data.x,h=d[0].data.y;this.mapPanel.setLoading(!0);this.mapPanel.searchLayer.destroyFeatures();OpenEMap.requestLM({url:"registerenheter?fnr\x3d"+e,success:function(a){!1===Ext.decode(a.responseText).success?Ext.Msg.alert("Meddelande","Ingen fastighet kunde hittas p\u00e5 adressen."):(this.resultPanel.expand(),a=(new OpenLayers.Format.GeoJSON).read(a.responseText,"FeatureCollection"),
b.addFeatures(a),a=new OpenLayers.Geometry.Point(f,h),feature=new OpenLayers.Feature.Vector(a),b.addFeatures([feature]),this.mapPanel.map.setCenter([f,h],this.zoom||5))},failure:function(){Ext.Msg.alert("Fel","Ok\u00e4nt.")},callback:function(){this.mapPanel.setLoading(!1)},scope:this})},beforequery:function(b){a&&null===b.query.match(a)&&(b.query=a+" "+b.query)},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.form.SearchPlacename",{extend:Ext.form.field.ComboBox,alias:"widget.searchplacename",require:["Ext.data.*","Ext.form.*"],initComponent:function(){var a=Ext.Object.fromQueryString(location.search).kommunkod;this.store=Ext.create("Ext.data.Store",{proxy:{type:"ajax",url:OpenEMap.basePathLM+"placenames",extraParams:{lmuser:OpenEMap.lmUser},reader:{type:"json",root:"features"},extraParams:{kommunkod:a}},fields:[{name:"id",mapping:"properties.id"},{name:"name",mapping:"properties.name"}]});
this.labelWidth=60;this.displayField="name";this.valueField="id";this.queryParam="q";this.forceSelection=this.typeAhead=!0;this.listeners={select:function(a,c){this.mapPanel.map.setCenter(c[0].raw.geometry.coordinates,this.zoom||5)},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.view.SearchFastighet",{extend:Ext.form.Panel,border:!1,zoom:void 0,initComponent:function(){function a(a){return{xtype:a,mapPanel:this.mapPanel,basePath:this.basePath,zoom:this.zoom,resultPanel:c}}this.renderTo||(this.title="S\u00f6k fastighet",this.bodyPadding=5);var b=Ext.create("GeoExt.data.FeatureStore",{layer:this.mapPanel.searchLayer,featureFilter:new OpenLayers.Filter.Function({evaluate:function(a){return a.attributes.name?!0:!1}}),fields:[{name:"name"},{name:"fid"},{name:"objid"}]}),
c=Ext.create("Ext.grid.Panel",{columns:[{text:"Namn",dataIndex:"name",flex:1}],store:b,selType:"featuremodel"});this.items=[{layout:"column",border:!1,items:[{xtype:"combo",width:110,store:[["searchregisterenhet","Fastighet"],["searchaddress","Adress"],["searchplacename","Ort"]],forceSelection:!0,queryMode:"local",value:"searchregisterenhet",border:!1,listeners:{change:function(b,c){var f=this.down("#search");this.mapPanel.searchLayer.destroyFeatures();f.removeAll();f.add(a.call(this,c))},scope:this}},
{itemId:"search",columnWidth:1,layout:"fit",border:!1,items:a.call(this,"searchregisterenhet")}]}];this.renderTo||this.items.push(c);this.callParent(arguments)}});
Ext.define("OpenEMap.view.ZoomTools",{extend:Ext.panel.Panel,bodyStyle:"background : transparent",border:!1,getTools:function(){var a=Ext.util.CSS.getRule(".oep-tools"),b=a?"large":"medium",c=[],a=Ext.create("GeoExt.slider.Zoom",{height:200,vertical:!0,aggressive:!0,margin:a?"5 0 5 0":"5 0 5 8",map:this.mapPanel.map});c.push({xtype:"button",iconCls:"zoomtools-plus",mapPanel:this.mapPanel,scale:b,cls:"x-action-btn",listeners:{click:function(){this.mapPanel.map.zoomIn()},scope:this}});c.push(a);c.push({xtype:"button",
scale:b,cls:"x-action-btn",iconCls:"zoomtools-minus",mapPanel:this.mapPanel,listeners:{click:function(){this.mapPanel.map.zoomOut()},scope:this}});return c},constructor:function(a){Ext.apply(this,a);this.items=this.getTools();this.callParent(arguments)}});
Ext.define("OpenEMap.Gui",{activeAction:null,objectConfigWindowTitle:"Object configuration",constructor:function(a){this.config=a.config;this.gui=a.gui;this.map=a.map;void 0===this.gui&&(this.gui={map:!1,toolbar:{},zoomTools:{},baseLayers:{},layers:{},searchFastighet:{},objectConfig:{},searchCoordinate:!1});this.mapPanel=Ext.create("OpenEMap.view.Map",{map:this.map,extent:this.config.extent,config:this.config});this.createPanels();this.createToolbar();a=[];a.push(this.mapPanel);this.zoomTools&&a.push(this.zoomTools);
this.leftPanel&&a.push(this.leftPanel);this.rightPanel&&a.push(this.rightPanel);this.baseLayers&&a.push(this.baseLayers);if(this.gui.map){var b=this.gui.map.renderTo?Ext.get(this.gui.map.renderTo):void 0;this.container=Ext.create("Ext.container.Container",Ext.apply({layout:"absolute",border:!1,width:b?b.getWidth():void 0,height:b?b.getHeight():void 0,items:a},this.gui.map))}else this.container=Ext.create("Ext.container.Viewport",{layout:"absolute",items:a})},destroy:function(){this.mapPanel&&this.mapPanel.destroy();
this.zoomTools&&this.zoomTools.destroy();this.mapLayers&&this.mapLayers.destroy();this.searchFastighet&&this.searchFastighet.destroy();this.searchCoordinate&&this.searchCoordinate.destroy();this.toolbar&&this.toolbar.destroy();this.leftPanel&&this.leftPanel.destroy();this.rightPanel&&this.rightPanel.destroy();this.baseLayers&&this.baseLayers.destroy();this.objectConfig&&this.objectConfig.destroy();this.objectConfigWindow&&this.objectConfigWindow.destroy();this.container&&this.container.destroy()},
onToggle:function(a,b){var c=a.baseAction;this.objectConfig&&(b&&(this.mapPanel.unselectAll(),this.objectConfig.hide(),this.activeAction=c),c.toggle(b))},createToolbar:function(){var a=this.config.basePath,b=this.config.layers;this.config.tools||(this.config.tools=[]);var c=this.config.tools.map(function(c){var d;c===this.config.tools[this.config.tools.length-1]&&(d="oep-tools-last");d={map:this.map,mapPanel:this.mapPanel,cls:d};c.constructor===Object&&(Ext.apply(d,c),c=d.type,delete d.type);if("ZoomSelector"==
c)return Ext.create("OpenEMap.form.ZoomSelector",{map:this.map});"DrawObject"==c?d.objectConfigView=this.objectConfig:"Identify"==c&&(d.basePath=a,d.layers=b);c=Ext.create("OpenEMap.action."+c,d);d.activate&&c.control&&(this.controlToActivate=c.control);c=Ext.create("Ext.button.Button",c);c.on("toggle",this.onToggle,this);return c},this),d=6;c.forEach(function(a){a&&(d=a.constructor==String?d+1:a.width?d+a.width:d+24,d+=8)});d+=3;this.gui.toolbar&&!this.gui.toolbar.renderTo?this.leftPanel=Ext.create("Ext.toolbar.Toolbar",
Ext.apply({cls:"oep-tools",y:20,x:80,width:d,items:c},this.gui.toolbar)):this.gui.toolbar&&this.gui.toolbar.renderTo&&(this.toolbar=Ext.create("Ext.toolbar.Toolbar",Ext.apply({cls:"oep-tools",width:this.gui.toolbar.width||d,items:c},this.gui.toolbar)))},createPanels:function(){this.mapLayers=this.gui.layers&&"advanced"===this.gui.layers.type?Ext.create("OpenEMap.view.layer.Advanced",Ext.apply({mapPanel:this.mapPanel},this.gui.layers)):Ext.create("OpenEMap.view.layer.Basic",Ext.apply({mapPanel:this.mapPanel},
this.gui.layers));this.searchFastighet=Ext.create("OpenEMap.view.SearchFastighet",Ext.apply({mapPanel:this.mapPanel,basePath:this.config.basePath},this.gui.searchFastighet));if(this.gui.layers&&!this.gui.layers.renderTo){var a=[this.mapLayers];this.gui.searchFastighet&&!this.gui.searchFastighet.renderTo&&a.push(this.searchFastighet);this.rightPanel=Ext.create("Ext.panel.Panel",{y:20,layout:{type:"vbox",align:"stretch"},width:300,border:!1,style:{right:"20px"},bodyStyle:{background:"transparent"},
items:a})}!this.map.allOverlays&&this.gui.baseLayers&&(this.baseLayers=Ext.create("OpenEMap.view.BaseLayers",Ext.apply({mapPanel:this.mapPanel,y:20,style:{right:"45%"},width:115},this.gui.baseLayers)));this.gui.zoomTools&&!this.gui.zoomTools.renderTo&&(this.zoomTools=Ext.create("OpenEMap.view.ZoomTools",Ext.apply({mapPanel:this.mapPanel,x:20,y:20,width:36},this.gui.zoomTools)));this.gui.searchCoordinate&&this.gui.searchCoordinate.renderTo&&(this.searchCoordinate=Ext.create("OpenEMap.view.SearchCoordinate",
Ext.apply({mapPanel:this.mapPanel},this.gui.searchCoordinate)));this.gui.objectConfig&&this.gui.objectConfig.renderTo?this.objectConfig=Ext.create("OpenEMap.view.ObjectConfig",Ext.apply({mapPanel:this.mapPanel,gui:this},this.gui.objectConfig)):this.gui.objectConfig&&(this.objectConfig=Ext.create("OpenEMap.view.ObjectConfig",Ext.apply({mapPanel:this.mapPanel,gui:this},this.gui.objectConfig)),this.objectConfigWindow=Ext.create("Ext.window.Window",Ext.apply({title:this.objectConfigWindowTitle,width:480,
height:300,layout:"fit",closable:!1,items:this.objectConfig},this.gui.objectConfig)),this.objectConfigWindow.show())}});
Ext.define("OpenEMap.config.Parser",{parse:function(a){var b={resolutions:[256,128,36,12,4,2,1,0.5,0.25,0.125],units:"m",projection:"EPSG:3006",fallThrough:!0,controls:["Navigation","KeyboardDefaults"]};b.resolutions=a.resolutions||b.resolutions;b.units=a.units||b.units;b.projection=a.projection||b.projection;b.maxExtent=a.maxExtent;b.extent=a.extent;b.controls=b.controls.map(this.createControl);Ext.apply(b,a.map);a=this.extractLayers(a.layers);a=a.map(this.transformLayer);b.allOverlays=!a.some(this.isBaseLayer);
b.layers=a.filter(this.isWMSLayer).map(this.createLayer);return new OpenLayers.Map(b)},extractLayers:function(a){var b=a.filter(function(a){return!a.layers});a=a.filter(function(a){return a.layers}).map(function(a){return a.layers});a=[].concat.apply([],a);return a=b.concat(a)},extractWFS:function(a){a=this.extractLayers(a);return a=a.filter(function(a){return a.wfs})},isBaseLayer:function(a){return a.wms&&a.wms.options&&a.wms.options.isBaseLayer?!0:!1},createControl:function(a){return a.constructor==
String?new OpenLayers.Control[a]:new OpenLayers.Control[a.type](a.options)},isWMSLayer:function(a){return a.wms},transformLayer:function(a){a.url&&(a.wms={url:a.url,params:a.params,options:a.options});return a},createLayer:function(a){return new OpenLayers.Layer.WMS(a.name,a.wms.url,a.wms.params,a.wms.options)}});
Ext.define("OpenEMap.form.ZoomSelector",{extend:Ext.form.ComboBox,emptyText:"Zoom Level",listConfig:{getInnerTpl:function(){return"1: {scale:round(0)}"}},width:120,editable:!1,triggerAction:"all",queryMode:"local",initComponent:function(){this.store=Ext.create("GeoExt.data.ScaleStore",{map:this.map});this.listeners={select:{fn:function(a,b){this.map.zoomTo(b[0].get("level"))},scope:this}};this.map.events.register("zoomend",this,function(){var a=this.store.queryBy(function(a){return this.map.getZoom()==
a.data.level});0<a.length?(a=a.items[0],this.setValue("1 : "+parseInt(a.data.scale))):zoomSelector.rendered&&this.clearValue()});this.callParent(arguments)}});Ext.define("OpenEMap.OpenLayers.Control.ModifyFeature",{});
OpenLayers.Control.ModifyFeature=OpenLayers.Class(OpenLayers.Control,{bySegment:!1,documentDrag:!1,geometryTypes:null,clickout:!0,toggle:!0,standalone:!1,layer:null,feature:null,vertex:null,vertices:null,virtualVertices:null,handlers:null,deleteCodes:null,virtualStyle:null,dragHandleStyle:null,radiusHandleStyle:null,vertexRenderIntent:null,mode:null,createVertices:!0,modified:!1,radiusHandle:null,dragHandle:null,onModificationStart:function(){},onModification:function(){},onModificationEnd:function(){},
initialize:function(a,b){b=b||{};this.layer=a;this.vertices=[];this.virtualVertices=[];this.virtualStyle=OpenLayers.Util.extend({},this.layer.style||this.layer.styleMap.createSymbolizer(null,b.vertexRenderIntent));this.virtualStyle.fillOpacity=0.3;this.virtualStyle.strokeOpacity=0.3;this.deleteCodes=[46,68];this.mode=OpenLayers.Control.ModifyFeature.RESHAPE;OpenLayers.Control.prototype.initialize.apply(this,[b]);OpenLayers.Util.isArray(this.deleteCodes)||(this.deleteCodes=[this.deleteCodes]);var c=
this,d={documentDrag:this.documentDrag,setEvent:function(a){var b=c.feature;c._lastVertex=b?b.layer.getFeatureFromEvent(a):null;OpenLayers.Handler.Drag.prototype.setEvent.apply(this,arguments)},stopDown:!1};this.handlers={keyboard:new OpenLayers.Handler.Keyboard(this,{keydown:this.handleKeypress}),drag:new OpenLayers.Handler.Drag(this,{down:function(){this.vertex=null;var a=this.layer.getFeatureFromEvent(this.handlers.drag.evt);a?this.dragStart(a):this.clickout&&(this._unselect=this.feature)},move:function(a){delete this._unselect;
this.vertex&&this.dragVertex(this.vertex,a)},up:function(){this.handlers.drag.stopDown=!1;this._unselect&&(this.unselectFeature(this._unselect),delete this._unselect)},done:function(){this.vertex&&this.dragComplete(this.vertex)}},d)};if(this.bySegment){if(!window.rbush)throw Error("The rbush library is required");if(OpenLayers.Control.ModifyFeature.BySegment)OpenLayers.Util.extend(this,OpenLayers.Control.ModifyFeature.BySegment);else throw Error("OpenLayers.Control.ModifyFeature.BySegment is missing from the build");
}},createVirtualVertex:function(a,b){var c=new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point((a.x+b.x)/2,(a.y+b.y)/2),null,this.virtualStyle);c._sketch=!0;return c},destroy:function(){this.map&&this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this});this.layer=null;OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){return OpenLayers.Control.prototype.activate.apply(this,arguments)?(this.moveLayerToTop(),this.map.events.on({removelayer:this.handleMapEvents,
changelayer:this.handleMapEvents,scope:this}),this._lastVertex=null,this.handlers.keyboard.activate()&&this.handlers.drag.activate()):!1},deactivate:function(){var a=!1;OpenLayers.Control.prototype.deactivate.apply(this,arguments)&&(this.moveLayerBack(),this.map.events.un({removelayer:this.handleMapEvents,changelayer:this.handleMapEvents,scope:this}),this.layer.removeFeatures(this.vertices,{silent:!0}),this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.vertices=[],this.handlers.drag.deactivate(),
this.handlers.keyboard.deactivate(),(a=this.feature)&&(a.geometry&&a.layer)&&this.unselectFeature(a),a=!0);return a},beforeSelectFeature:function(a){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:a})},selectFeature:function(a){if(!(this.feature===a||this.geometryTypes&&-1==OpenLayers.Util.indexOf(this.geometryTypes,a.geometry.CLASS_NAME))){!1!==this.beforeSelectFeature(a)&&(this.feature&&this.unselectFeature(this.feature),this.feature=a,this.layer.selectedFeatures.push(a),
this.layer.drawFeature(a,"select"),this.modified=!1,this.resetVertices(),this.onModificationStart(this.feature));var b=a.modified;if(a.geometry&&(!b||!b.geometry))this._originalGeometry=a.geometry.clone()}},unselectFeature:function(a){this.layer.removeFeatures(this.vertices,{silent:!0});this.vertices=[];this.layer.destroyFeatures(this.virtualVertices,{silent:!0});this.virtualVertices=[];this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),delete this.dragHandle);this.radiusHandle&&
(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),delete this.radiusHandle);this.layer.drawFeature(this.feature,"default");this.feature=null;OpenLayers.Util.removeItem(this.layer.selectedFeatures,a);this.onModificationEnd(a);this.layer.events.triggerEvent("afterfeaturemodified",{feature:a,modified:this.modified});this.modified=!1},dragStart:function(a){var b="OpenLayers.Geometry.Point"==a.geometry.CLASS_NAME;if(!this.standalone&&(!a._sketch&&b||!a._sketch))this.toggle&&this.feature===a&&
(this._unselect=a),this.selectFeature(a);if(this.feature&&(a._sketch||b&&a===this.feature))this.vertex=a,this.handlers.drag.stopDown=!0},dragVertex:function(a,b){var c=this.map.getLonLatFromViewPortPx(b),d=a.geometry;d.move(c.lon-d.x,c.lat-d.y);this.modified=!0;"OpenLayers.Geometry.Point"==this.feature.geometry.CLASS_NAME?this.layer.events.triggerEvent("vertexmodified",{vertex:a.geometry,feature:this.feature,pixel:b}):(a._index?(-1==a._index&&(a._index=OpenLayers.Util.indexOf(a.geometry.parent.components,
a._next)),a.geometry.parent.addComponent(a.geometry,a._index),delete a._index,OpenLayers.Util.removeItem(this.virtualVertices,a),this.vertices.push(a)):a==this.dragHandle?(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[],this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],{silent:!0}),this.radiusHandle=null)):a!==this.radiusHandle&&this.layer.events.triggerEvent("vertexmodified",{vertex:a.geometry,feature:this.feature,pixel:b}),0<this.virtualVertices.length&&(this.layer.destroyFeatures(this.virtualVertices,
{silent:!0}),this.virtualVertices=[]),this.layer.drawFeature(this.feature,this.standalone?void 0:"select"));this.layer.drawFeature(a)},dragComplete:function(){this.resetVertices();this.setFeatureState();this.onModification(this.feature);this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){if(this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE&&(this.feature.state=OpenLayers.State.UPDATE,this.modified&&this._originalGeometry)){var a=
this.feature;a.modified=OpenLayers.Util.extend(a.modified,{geometry:this._originalGeometry});delete this._originalGeometry}},resetVertices:function(){0<this.vertices.length&&(this.layer.removeFeatures(this.vertices,{silent:!0}),this.vertices=[]);0<this.virtualVertices.length&&(this.layer.removeFeatures(this.virtualVertices,{silent:!0}),this.virtualVertices=[]);this.dragHandle&&(this.layer.destroyFeatures([this.dragHandle],{silent:!0}),this.dragHandle=null);this.radiusHandle&&(this.layer.destroyFeatures([this.radiusHandle],
{silent:!0}),this.radiusHandle=null);this.feature&&"OpenLayers.Geometry.Point"!=this.feature.geometry.CLASS_NAME&&(this.mode&OpenLayers.Control.ModifyFeature.DRAG&&this.collectDragHandle(),this.mode&(OpenLayers.Control.ModifyFeature.ROTATE|OpenLayers.Control.ModifyFeature.RESIZE)&&this.collectRadiusHandle(),this.mode&OpenLayers.Control.ModifyFeature.RESHAPE&&(this.mode&OpenLayers.Control.ModifyFeature.RESIZE||this.collectVertices()))},handleKeypress:function(a){var b=a.keyCode;if(this.feature&&-1!=
OpenLayers.Util.indexOf(this.deleteCodes,b)&&(b=this._lastVertex)&&-1!=OpenLayers.Util.indexOf(this.vertices,b)&&!this.handlers.drag.dragging&&b.geometry.parent)b.geometry.parent.removeComponent(b.geometry),this.layer.events.triggerEvent("vertexremoved",{vertex:b.geometry,feature:this.feature,pixel:a.xy}),this.layer.drawFeature(this.feature,this.standalone?void 0:"select"),this.modified=!0,this.resetVertices(),this.setFeatureState(),this.onModification(this.feature),this.layer.events.triggerEvent("featuremodified",
{feature:this.feature})},collectVertices:function(){function a(c){var d,e,f;if("OpenLayers.Geometry.Point"==c.CLASS_NAME)e=new OpenLayers.Feature.Vector(c),e._sketch=!0,e.renderIntent=b.vertexRenderIntent,b.vertices.push(e);else{f=c.components.length;"OpenLayers.Geometry.LinearRing"==c.CLASS_NAME&&(f-=1);for(d=0;d<f;++d)e=c.components[d],"OpenLayers.Geometry.Point"==e.CLASS_NAME?(e=new OpenLayers.Feature.Vector(e),e._sketch=!0,e.renderIntent=b.vertexRenderIntent,b.vertices.push(e)):a(e);if(b.createVertices&&
"OpenLayers.Geometry.MultiPoint"!=c.CLASS_NAME){d=0;for(f=c.components.length;d<f-1;++d){e=c.components[d];var h=c.components[d+1];"OpenLayers.Geometry.Point"==e.CLASS_NAME&&"OpenLayers.Geometry.Point"==h.CLASS_NAME&&(e=b.createVirtualVertex.call(b,e,h),e.geometry.parent=c,e._index=d+1,b.virtualVertices.push(e))}}}}this.vertices=[];this.virtualVertices=[];var b=this;a.call(this,this.feature.geometry);this.layer.addFeatures(this.virtualVertices,{silent:!0});this.layer.addFeatures(this.vertices,{silent:!0})},
collectDragHandle:function(){var a=this.feature.geometry,b=a.getBounds().getCenterLonLat(),b=new OpenLayers.Geometry.Point(b.lon,b.lat),c=new OpenLayers.Feature.Vector(b,null,this.dragHandleStyle);b.move=function(b,c){OpenLayers.Geometry.Point.prototype.move.call(this,b,c);a.move(b,c)};c._sketch=!0;this.dragHandle=c;this.dragHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.dragHandle],{silent:!0})},collectRadiusHandle:function(){var a=this.feature.geometry,b=a.getBounds(),
c=b.getCenterLonLat(),d=new OpenLayers.Geometry.Point(c.lon,c.lat),b=new OpenLayers.Geometry.Point(b.right,b.bottom),c=new OpenLayers.Feature.Vector(b,null,this.radiusHandleStyle),e=this.mode&OpenLayers.Control.ModifyFeature.RESIZE,f=this.mode&OpenLayers.Control.ModifyFeature.RESHAPE,h=this.mode&OpenLayers.Control.ModifyFeature.ROTATE;b.move=function(b,c){OpenLayers.Geometry.Point.prototype.move.call(this,b,c);var l=this.x-d.x,k=this.y-d.y,m=l-b,p=k-c;if(h){var n=Math.atan2(p,m),n=Math.atan2(k,l)-
n,n=n*(180/Math.PI);a.rotate(n,d)}if(e){var q;f?(k/=p,q=l/m/k):(m=Math.sqrt(m*m+p*p),k=Math.sqrt(l*l+k*k)/m);a.resize(k,d,q)}};c._sketch=!0;this.radiusHandle=c;this.radiusHandle.renderIntent=this.vertexRenderIntent;this.layer.addFeatures([this.radiusHandle],{silent:!0})},setMap:function(a){this.handlers.drag.setMap(a);OpenLayers.Control.prototype.setMap.apply(this,arguments)},handleMapEvents:function(a){("removelayer"==a.type||"order"==a.property)&&this.moveLayerToTop()},moveLayerToTop:function(){var a=
Math.max(this.map.Z_INDEX_BASE.Feature-1,this.layer.getZIndex())+1;this.layer.setZIndex(a)},moveLayerBack:function(){var a=this.layer.getZIndex()-1;a>=this.map.Z_INDEX_BASE.Feature?this.layer.setZIndex(a):this.map.setLayerZIndex(this.layer,this.map.getLayerIndex(this.layer))},CLASS_NAME:"OpenLayers.Control.ModifyFeature"});OpenLayers.Control.ModifyFeature.RESHAPE=1;OpenLayers.Control.ModifyFeature.RESIZE=2;OpenLayers.Control.ModifyFeature.ROTATE=4;OpenLayers.Control.ModifyFeature.DRAG=8;
Ext.define("OpenEMap.Client",{version:"0.9.0",map:null,drawLayer:null,destroy:function(){this.gui&&this.gui.destroy()},configure:function(a,b){b=Ext.apply({},b);this.initialConfig=Ext.clone(a);Ext.tip.QuickTipManager.init();this.map=Ext.create("OpenEMap.config.Parser").parse(a);this.gui=Ext.create("OpenEMap.Gui",{config:a,gui:b.gui,map:this.map});this.mapPanel=this.gui.mapPanel;this.drawLayer=this.gui.mapPanel.drawLayer;this.gui.controlToActivate&&this.gui.controlToActivate.activate()},addGeoJSON:function(a){a=
(new OpenLayers.Format.GeoJSON).read(a,"Feature");this.drawLayer.addFeatures([a])},setSketchStyleMap:function(a){this.map.controls.forEach(function(b){b instanceof OpenLayers.Control.DrawFeature&&(b.handler.layerOptions.styleMap=a,b.handler.layer&&(b.handler.layer.styleMap=a))})}});Ext.define("OpenEMap.locale.sv_SE.Gui",{override:"OpenEMap.Gui",objectConfigWindowTitle:"Objektkonfiguration"});
Ext.define("OpenEMap.locale.sv_SE.view.ObjectConfig",{override:"OpenEMap.view.ObjectConfig",typeLabel:"Typ",widthLabel:"Bredd",lengthLabel:"L\u00e4ngd",m1Label:"M1",m2Label:"M2",angleLabel:"Vinkel"});Ext.define("OpenEMap.Search",{constructor:function(){initConfig()},doSearch:function(){}});
Ext.define("OpenEMap.common.Util",{singleton:!0,doRequest:function(a,b){Ext.Ajax.request(Ext.apply({success:function(a){a&&a.responseText&&(a=Ext.decode(a.responseText),b(a))},failure:function(){}},a?a:{}))},randomUUID:function(){var a=["67750fcd-4bfe-444c-aab1-34f4a2a8bc1a","ba15aad9-1b42-4224-bec7-428e592bed14","edb8b81b-dd7a-4a29-98ae-a454d2cfddcc","f28575c2-9229-4445-9324-a41430213fb0","ca484649-0ec8-4149-94cf-3a8cce587463"];return a[Math.floor(Math.random()*a.length)]}});
Ext.define("OpenEMap.model.MapConfig",{extend:Ext.data.Model,fields:["id","name"]});Ext.define("OpenEMap.model.Server",{extend:Ext.data.Model,fields:["id","type","url","proxy"]});Ext.define("OpenEMap.store.SavedMapConfigs",{extend:Ext.data.Store,model:"OpenEMap.model.MapConfig",autoLoad:!0,proxy:{type:"ajax",url:"http://openemap.apiary.io/configs",reader:{type:"json",root:"configs"}}});
Ext.define("OpenEMap.store.Servers",{extend:Ext.data.Store,model:"OpenEMap.model.Server",autoLoad:!0,proxy:{type:"ajax",url:"http://openemap.apiary.io/servers",reader:{type:"json",root:"configs"}}});
Ext.define("OpenEMap.view.MetadataWindow",{extend:Ext.Window,title:"Metadata",width:600,height:500,border:0,layout:"fit",closeAction:"hide",url:null,TRANSLATION:{sv:{tag:{"gmd:citation":"","gmd:CI_Address":"","gmd:CI_Citation":"","gmd:CI_Contact":"","gmd:CI_Date":"","gmd:CI_Telephone":"","gmd:CI_ResponsibleParty":"","gmd:identificationInfo":"","gmd:EX_BoundingPolygon":"","gmd:EX_Extent":"","gmd:EX_GeographicBoundingBox":"","gmd:EX_GeographicDescription":"","gmd:EX_TemporalExtent":"","gmd:EX_VerticalExtent":"",
"gmd:MD_BrowseGraphic":"","gmd:MD_Constraints":"","gmd:MD_Identifier":"","gmd:MD_Keywords":"","gmd:MD_LegalConstraints":"","gmd:MD_Metadata":"","gmd:MD_MaintenanceInformation":"","gmd:MD_SecurityConstraints":"","gmd:thesaurusName":"","gmd:voice":"","srv:SV_ServiceIdentification":"","gmd:accessConstraints":"Nyttjanderestriktioner","gmd:abstract":"Sammanfattning","gmd:address":"Adress","gmd:alternateTitle":"Alternativ titel","gmd:city":"Stad","gmd:classification":"Klassificering","gmd:contact":"Metadatakontakt",
"gmd:contactInfo":"Kontaktinformation","gmd:date":"Datum","gmd:dateStamp":"Datum","gmd:dateType":"Datumtyp","gmd:descriptiveKeywords":"Nyckelordslista","gmd:electronicMailAddress":"E-post","gmd:fileIdentifier":"Identifierare f\u00f6r metadatam\u00e4ngden","gmd:hierarchyLevel":"Hierarkisk niv\u00e5 (Resurstyp)","gmd:individualName":"Person","gmd:identifier":"Identifierare","gmd:keyword":"Nyckelord","gmd:language":"Spr\u00e5k","gmd:metadataStandardName":"Metadatastandardversion","gmd:metadataStandardVersion":"Metadatastandard",
"gmd:organisationName":"Organisation","gmd:otherConstraints":"Andra restriktioner","gmd:phone":"Telefonnummer","gmd:pointOfContact":"Kontakt","gmd:resourceConstraints":"Restriktioner och begr\u00e4nsningar","gmd:role":"Ansvarsomr\u00e5de","gmd:status":"Status","gmd:title":"Titel","gmd:type":"Typ","gmd:useLimitation":"Anv\u00e4ndbarhetsbegr\u00e4nsningar"},codeListValue:{swe:"Svenska",service:"Tj\u00e4nst",pointOfContact:"Kontakt"}}},initComponent:function(){this.overviewTab=new Ext.Panel({title:"Information om metadata"});
this.metadataTab=new Ext.Panel({title:"Information om metadata"});this.dataTab=new Ext.Panel({title:"Information om data"});this.qualityTab=new Ext.Panel({title:"Kvalitet"});this.distributionTab=new Ext.Panel({title:"Distribution"});this.restTab=new Ext.Panel({title:"Rest"});this.items=Ext.create("Ext.tab.Panel",{activeTab:0,defaults:{autoScroll:!0},items:[this.overviewTab,this.metadataTab,this.dataTab,this.qualityTab,this.distributionTab,this.restTab]});this.callParent(arguments)},showMetadata:function(a){var b=
this;b.getMetadata(a,function(a){a.children&&(a=b.parseMetadata(a.children),b.overviewTab.html=a.overview,b.metadataTab.html=a.metadata_info,b.dataTab.html=a.data_info,b.qualityTab.html=a.quality,b.distributionTab.html=a.distribution,b.restTab.html=a.rest,b.show())})},getMetadata:function(a,b){a&&this.url&&OpenEMap.common.Util.doRequest({url:this.url+a},b)},translate:function(a,b){var c=null;try{c=this.TRANSLATION.sv[a][b],"string"!==typeof c&&(c=b)}catch(d){translateTag=null}return c},parseMetadataTextTag:function(a){var b=
null;a.tag&&(b=this.translate("tag",a.tag),b=null!==b?""!==b?"\x3cb\x3e"+b+"\x3c/b\x3e":"":null);a.text&&(b=a.text);a.attributes&&a.attributes.codeListValue&&(b=this.translate("codeListValue",a.attributes.codeListValue));return b},getGroups:function(a,b){var c=[];for(key in b)for(var d=0;d<b[key].length;d++)-1!==a.indexOf(b[key][d])&&c.push(key);0===c.length&&c.push("rest");return c},metadataIterator:function(a,b,c,d){var e=this.parseMetadataTextTag(a);d=("undefined"!==typeof d?d+"\x3e":"")+a.tag;
for(var f=this.getGroups(d,c),h=0;h<f.length;h++){var g=f[h];"string"!==typeof b[g]&&(b[g]="");if(null!==e){b[g]+="\x3cli\x3e";b[g]+=e;if(a.children&&0===h){b[g]+=""!==e?"\x3cul\x3e":"";for(var j=0;j<a.children.length;j++)this.metadataIterator(a.children[j],b,c,d);b[g]+=""!==e?"\x3c/ul\x3e":""}b[g]+="\x3c/li\x3e"}}},parseMetadata:function(a){var b={};this.metadataIterator(a[0],b,{overview:["gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:citation\x3egmd:CI_Citation\x3egmd:title",
"gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:abstract","gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:descriptiveKeywords","gmd:MD_Metadata\x3egmd:identificationInfo\x3esrv:SV_ServiceIdentification\x3egmd:graphicOverview"],metadata_info:"gmd:MD_Metadata\x3egmd:fileIdentifier gmd:MD_Metadata\x3egmd:language gmd:MD_Metadata\x3egmd:dateStamp gmd:MD_Metadata\x3egmd:hierarchyLevel gmd:MD_Metadata\x3egmd:metadataStandardName gmd:MD_Metadata\x3egmd:metadataStandardVersion gmd:MD_Metadata\x3egmd:contact".split(" "),
data_info:["gmd:MD_Metadata\x3egmd:identificationInfo"],quality:["gmd:MD_Metadata\x3egmd:dataQualityInfo"],distribution:["gmd:MD_Metadata\x3egmd:distributionInfo"]});return b}});
Ext.define("OpenEMap.view.SavedMapConfigs",{extend:Ext.grid.Panel,autoScroll:!0,selModel:Ext.create("Ext.selection.CheckboxModel",{singleSelect:!0,listeners:{select:function(a,b){var c=b.getId();init("http://openemap.apiary.io/configs/"+c)}}}),store:Ext.create("OpenEMap.store.SavedMapConfigs"),columns:[{header:"Name",dataIndex:"name",flex:1},{xtype:"actioncolumn",width:40,iconCls:"action-remove",tooltip:"Ta bort",handler:function(a,b){a.getStore().removeAt(b)}}],constructor:function(){this.callParent(arguments)}});
Ext.define("OpenEMap.view.layer.TreeFilter",{extend:Ext.AbstractPlugin,alias:"plugin.treefilter",collapseOnClear:!0,allowParentFolders:!1,init:function(a){this.tree=a;a.filter=Ext.Function.bind(this.filter,this);a.clearFilter=Ext.Function.bind(this.clearFilter,this)},filter:function(a,b,c){var d=this,e=d.tree,f=[],h=e.getRootNode();b=b||"text";c=c||RegExp(a,"ig");var g=[],j;Ext.isEmpty(a)?d.clearFilter():(e.expandAll(),h.cascadeBy(function(a){a.get(b).match(c)&&f.push(a)}),!1===d.allowParentFolders&&
Ext.each(f,function(a){a.isLeaf()||Ext.Array.remove(f,a)}),Ext.each(f,function(a){h.cascadeBy(function(b){!0==b.contains(a)&&g.push(b)});!0===d.allowParentFolders&&!a.isLeaf()&&a.cascadeBy(function(a){g.push(a)});g.push(a)}),h.cascadeBy(function(a){if(j=Ext.fly(e.getView().getNode(a)))j.setVisibilityMode(Ext.Element.DISPLAY),j.setVisible(Ext.Array.contains(g,a))}))},clearFilter:function(){var a=this.tree,b=a.getRootNode();this.collapseOnClear&&a.collapseAll();b.cascadeBy(function(b){(viewNode=Ext.fly(a.getView().getNode(b)))&&
viewNode.show()})}});
Ext.define("OpenEMap.view.layer.Add",{extend:Ext.tree.Panel,viewConfig:{plugins:{ptype:"treeviewdragdrop",enableDrop:!1},copy:!0},rootVisible:!1,multiSelect:!0,layers_ws_url:"http://openemap.apiary.io/layers",plugins:{ptype:"treefilter",allowParentFolders:!0},dockedItems:[{xtype:"toolbar",dock:"top",layout:"fit",items:[{xtype:"trigger",triggerCls:"x-form-clear-trigger",onTriggerClick:function(){this.reset();this.focus()},listeners:{change:function(a,b){a.up("treepanel").filter(b)},buffer:250}}]}],
initComponent:function(){var a=this;this.columns=[{xtype:"treecolumn",flex:1,dataIndex:"text"}];this.infoColumn&&this.columns.push(this.infoColumn);this.store=Ext.create("Ext.data.TreeStore",{model:"GeoExt.data.LayerTreeModel",defaultRootProperty:"layers",proxy:{type:"memory"}});OpenEMap.common.Util.doRequest({url:this.layers_ws_url},function(b){if(b){b=[{id:0,name:"Foto",layers:[{id:1,name:"Sublayer"},{id:2,name:"Sublayer2"}]},{id:3,name:"Test"}];for(var c=0;c<b.length;c++)if(b[c].expanded=!0,b[c].checked=
!1,b[c].text=b[c].name,b[c].layers)for(var d=0;d<b[c].layers.length;d++)b[c].layers[d].leaf=!0,b[c].layers[d].checked=!1,b[c].layers[d].text=b[c].layers[d].name;else b[c].leaf=!0;a.store.setRootNode({name:"Lager",expanded:!0,layers:b})}});this.listeners={checkchange:function(b,c){c?b.cascadeBy(function(b){b.set("checked",c);a.loadLayer(b)}):b.cascadeBy(function(b){b.set("checked",!1);(b=b.get("layer"))&&(""!==b&&b.map)&&a.mapPanel.map.removeLayer(b)})},cellclick:function(a,c,d,e){e.gx_treecomponents&&
(a=e.gx_treecomponents.gx_wmslegend,a.isHidden()?(a.rendered||a.render(e.el),a.show()):a.hide())},scope:this};this.callParent(arguments)},loadLayer:function(a){var b=this;a.get("layer")?(b.mapPanel.layers.add(a.get("layer")),a.data.layer.setVisibility(!0)):OpenEMap.common.Util.doRequest({url:this.layers_ws_url+"/"+a.getId()},function(c){var d=b.servers.getById(c.server);c=new OpenLayers.Layer.WMS(c.name,d.get("url")+"/gwc/service/wms",c.wms.params,c.wms.options);c.displayInLayerSwitcher=!1;b.mapPanel.layers.add(c);
c.setVisibility(!0);a.set("layer",c);a.store.sync()})}});
Ext.define("OpenEMap.view.layer.Tree",{extend:GeoExt.tree.Panel,initComponent:function(){var a=this.mapPanel;this.store=Ext.create("Ext.data.TreeStore",{model:"GeoExt.data.LayerTreeModel",root:{expanded:!0,plugins:[{ptype:"gx_layercontainer",store:a.layers,loader:{createNode:function(b){b.component={xtype:"gx_wmslegend",layerRecord:a.layers.getByLayer(b.layer),showTitle:!1,hidden:!0,deferRender:!0,cls:"legend"};return GeoExt.tree.LayerLoader.prototype.createNode.call(this,b)}}}]}});this.listeners=
{cellclick:function(a,c,d,e){e.gx_treecomponents&&(a=e.gx_treecomponents.gx_wmslegend,a.isHidden()?(a.rendered||a.render(e.el),a.show()):a.hide())},scope:this};this.callParent(arguments)}});
Ext.define("OpenEMap.view.layer.Advanced",{extend:Ext.container.Container,layout:{type:"hbox",pack:"end",align:"stretch"},width:500,height:650,initComponent:function(){this.serversStore=Ext.create("OpenEMap.store.Servers");this.addLayerInfoColumn=Ext.create("OpenEMap.action.MetadataInfoColumn",{url:"http://localhost/riges_sundsvall/GetMetadataByIdResponse.json?"});this.showLayerInfoColumn=Ext.create("OpenEMap.action.MetadataInfoColumn",{url:"http://localhost/riges_sundsvall/GetMetadataByIdResponse.json?"});
this.addLayerInfoColumn.metadataWindow=Ext.create("OpenEMap.view.MetadataWindow",{url:"http://localhost/riges_sundsvall/GetMetadataByIdResponse.json?"});this.showLayerInfoColumn.metadataWindow=this.addLayerInfoColumn.metadataWindow;this.items=[Ext.create("OpenEMap.view.layer.Add",{title:"L\u00e4gg till lager",width:250,height:550,headerPosition:"top",collapsible:!0,collapseMode:"header",collapseDirection:"right",titleCollapse:!0,animate:!1,infoColumn:this.addLayerInfoColumn,mapPanel:this.mapPanel,
servers:this.serversStore}),{xtype:"panel",layout:"border",width:"50%",border:!1,items:[Ext.create("OpenEMap.view.layer.Tree",{title:"Visas p\u00e5 kartan",width:250,height:550,region:"north",mapPanel:this.mapPanel,rootVisible:!1,viewConfig:{plugins:{ptype:"treeviewdragdrop"},listeners:{beforedrop:function(){return 0}}},columns:[{xtype:"gx_treecolumn",flex:1,dataIndex:"text"},this.showLayerInfoColumn,{xtype:"actioncolumn",width:40,iconCls:"action-remove",tooltip:"Ta bort",handler:function(a,b){for(var c=
a.getStore().getAt(b),d=0;d<c.childNodes.length;d++)c.removeChild(c.childNodes[d]);c.remove()}}],buttons:[{text:"Spara kartinneh\u00e5ll",handler:function(){}}]}),{title:"Sparade kartor",region:"center",xtype:"panel",border:!1,layout:"fit",collapsible:!0,titleCollapse:!0,items:Ext.create("OpenEMap.view.SavedMapConfigs")}]}];this.callParent(arguments)}});
Ext.define("OpenEMap.view.layer.Basic",{extend:OpenEMap.view.layer.Tree,overflowY:"auto",rootVisible:!1,height:300,border:!1,initComponent:function(){this.renderTo||(this.title="Lager",this.bodyPadding=5,this.collapsible=!0);this.callParent(arguments)}});